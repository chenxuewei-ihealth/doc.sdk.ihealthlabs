"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7985],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),p=o,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9850:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={title:"TS28B",sidebar_position:2},i=void 0,l={unversionedId:"react-native/thermometer/ts28b",id:"react-native/thermometer/ts28b",title:"TS28B",description:"API Reference",source:"@site/docs/react-native/thermometer/ts28b.md",sourceDirName:"react-native/thermometer",slug:"/react-native/thermometer/ts28b",permalink:"/ihealthlabs-sdk-docs/docs/react-native/thermometer/ts28b",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/thermometer/ts28b.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"TS28B",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"NT13B",permalink:"/ihealthlabs-sdk-docs/docs/react-native/thermometer/nt13b"},next:{title:"PT3SBT",permalink:"/ihealthlabs-sdk-docs/docs/react-native/thermometer/pt3sbt"}},s={},c=[{value:"API Reference",id:"api-reference",level:2},{value:"Import TS28B Module",id:"import-ts28b-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"set measurement listener",id:"set-measurement-listener",level:3}],u={toc:c};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"api-reference"},"API Reference"),(0,o.kt)("h3",{id:"import-ts28b-module"},"Import TS28B Module"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  TS28BModule,\n  TS28BProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,o.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(TS28BModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,o.kt)("h3",{id:"set-measurement-listener"},"set measurement listener"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"TS28BModule.measure(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(TS28BModule.Event_Notify,  (event) => {\n    if (event.action === TS28BProfileModule.ACTION_MEASUREMENT_RESULT) {\n        console.log(event[TS28BProfileModule.RESULT]);\n        console.log(event[TS28BProfileModule.UNIT_FLAG]);\n    } \n});\n")))}d.isMDXComponent=!0}}]);