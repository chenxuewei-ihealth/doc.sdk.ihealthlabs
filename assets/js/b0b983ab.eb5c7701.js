"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3735],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>p});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(t),p=o,v=m["".concat(c,".").concat(p)]||m[p]||u[p]||a;return t?n.createElement(v,i(i({ref:r},d),{},{components:t})):n.createElement(v,i({ref:r},d))}));function p(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9381:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={title:"BP7S",sidebar_position:5},i=void 0,s={unversionedId:"ios/blood_pressure/bp7s",id:"ios/blood_pressure/bp7s",title:"BP7S",description:"WorkFlow",source:"@site/docs/ios/blood_pressure/bp7s.md",sourceDirName:"ios/blood_pressure",slug:"/ios/blood_pressure/bp7s",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_pressure/bp7s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/blood_pressure/bp7s.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"BP7S",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"BP7",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_pressure/bp7"},next:{title:"KN550",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_pressure/kn550"}},c={},l=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for BP7S devices",id:"2scan-for-bp7s-devices",level:3},{value:"3.Connect to BP7S devices",id:"3connect-to-bp7s-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Get the device battery",id:"get-the-device-battery",level:3},{value:"Set the BP7S display unit",id:"set-the-bp7s-display-unit",level:3},{value:"Get the number of history data",id:"get-the-number-of-history-data",level:3},{value:"Get history data",id:"get-history-data",level:3},{value:"Set BP7S device angle",id:"set-bp7s-device-angle",level:3},{value:"Disconnect BP7S device",id:"disconnect-bp7s-device",level:3}],d={toc:l};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"workflow"},"WorkFlow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Scan and connect BP7S blood pressure monitor.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"BP7S only support offline measurement."))),(0,o.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,o.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:BP7SDiscover object:nil];\n            \n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:BP7SConnectFailed object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:BP7SConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:BP7SDisConnectNoti object:nil];\n\n[BP7SController shareBP7SController];\n")),(0,o.kt)("h3",{id:"2scan-for-bp7s-devices"},"2.Scan for BP7S devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_BP7S];\n")),(0,o.kt)("h3",{id:"3connect-to-bp7s-devices"},"3.Connect to BP7S devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_BP7S andSerialNub:deviceMac];\n")),(0,o.kt)("h2",{id:"api-reference"},"API reference"),(0,o.kt)("h3",{id:"get-the-device-battery"},"Get the device battery"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Query battery remaining energy.\n * @param energyValue  A block to return the device battery remaining energy percentage, \u201880\u2019 stands for 80%.\n * @param error  A block to return the error in \u2018Establish measurement connection\u2019\n */\n-(void)commandEnergy:(BlockEnergyValue)energyValue errorBlock:(BlockError)error;\n")),(0,o.kt)("h3",{id:"set-the-bp7s-display-unit"},"Set the BP7S display unit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * Set units for the Device\n * @param UnitName   The unit name string that BP7S show result should use, must be @"mmHg" or @"kPa".\n * @param setResult  This block return means set success.\n * @param error  A block to return the error in set Unit communication.\n */\n-(void)commandSetUnit:(NSString *)UnitName disposeSetReslut:(BlockSuccess)setResult errorBlock:(BlockError)error;\n')),(0,o.kt)("h3",{id:"get-the-number-of-history-data"},"Get the number of history data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Upload offline data total Count.\n * @param  totalCount item quantity of total data.\n * @param error  A block to return the error.\n */\n-(void)commandTransferMemoryTotalCount:(BlockBachCount)totalCount errorBlock:(BlockError)error;\n")),(0,o.kt)("h3",{id:"get-history-data"},"Get history data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Upload offline data.\n * @param  totalCount item quantity of total data\n * @param  progress upload completion ratio , from 0.0 to 1.0 or 0%~100\uff05, 100% means upload completed.\n * @param  uploadDataArray    offline data set, including measurement time, systolic pressure, diastolic pressure, pulse rate, irregular judgment. corresponding KEYs are time, sys, dia, heartRate, irregular.\n * @param error   error codes.\n * Specification:\n *   1.  BPError0 = 0: Unable to take measurements due to arm/wrist movements.\n *   2.  BPError1:  Failed to detect systolic pressure.\n *   3.  BPError2:  Failed to detect diastolic pressure.\n *   4.  BPError3:  Pneumatic system blocked or cuff is too tight during inflation.\n *   5.  BPError4:  Pneumatic system leakage or cuff is too loose during inflation.\n *   6.  BPError5:  Cuff pressure reached over 300mmHg.\n *   7.  BPError6:  Cuff pressure reached over 15 mmHg for more than 160 seconds.\n *   8.  BPError7:  Data retrieving error.\n *   9.  BPError8:  Data retrieving error.\n *   10.  BPError9:  Data retrieving error.\n *   11.  BPError10:  Data retrieving error.\n *   12.  BPError11:  Communication Error.\n *   13.  BPError12:  Communication Error.\n *   14.  BPError13:  Low battery.\n *   15.  BPError14:  Device bluetooth set failed.\n *   16.  BPError15:  Systolic exceeds 260mmHg or diastolic exceeds 199mmHg.\n *   17.  BPError16:  Systolic below 60mmHg or diastolic below 40mmHg.\n *   18.  BPError17:  Arm/wrist movement beyond range.\n *   19.  BPNormalError=30:  device error, error message displayed automatically.\n *   20.  BPOverTimeError:  Abnormal communication.\n *   21.  BPNoRespondError:  Abnormal communication.\n *   22.  BPBeyondRangeError:  device is out of communication range.\n *   23.  BPDidDisconnect:  device is disconnected.\n *   24.  BPAskToStopMeasure:  measurement has been stopped.\n *   25.  BPInputParameterError=400:  Parameter input error.\n */\n-(void)commandTransferMemoryDataWithTotalCount:(BlockBachCount)totalCount progress:(BlockBachProgress)progress dataArray:(BlockBachArray)uploadDataArray errorBlock:(BlockError)error;\n")),(0,o.kt)("h3",{id:"set-bp7s-device-angle"},"Set BP7S device angle"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'/**\n Set the effective angle range for left hand measurement and right hand measurement to the Device\n\n @param angleInfo A dictionary set the max and mini effective angles for left hand measurement and right hand       measurement,the angle values type is NSNumber, ranging from 0~90\n with the four keys are:\n @"highAngleForLeft", @"lowAngleForLeft", @"highAngleForRight", @"lowAngleForRight".\n @param setResult This block return means set success.\n @param error A block to return the error in set angles communication.\n */\n-(void)commandSetAngle:(NSDictionary *)angleInfo disposeSetReslut:(BlockSuccess)setResult errorBlock:(BlockError)error;\n')),(0,o.kt)("h3",{id:"disconnect-bp7s-device"},"Disconnect BP7S device"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Disconnect current device\n */\n-(void)commandDisconnectDevice;\n")))}u.isMDXComponent=!0}}]);