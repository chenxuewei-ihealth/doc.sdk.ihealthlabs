"use strict";(self.webpackChunksdk_docs=self.webpackChunksdk_docs||[]).push([[9503],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return v}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),s=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),v=o,m=p["".concat(a,".").concat(v)]||p[v]||u[v]||c;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=p;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<c;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5256:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=t(7462),o=t(3366),c=(t(7294),t(3905)),i=["components"],l={title:"TS28B",sidebar_position:2},a=void 0,s={unversionedId:"thermometer/ts28b",id:"version-2.7.7/thermometer/ts28b",isDocsHomePage:!1,title:"TS28B",description:"WorkFlow",source:"@site/ios_versioned_docs/version-2.7.7/thermometer/ts28b.md",sourceDirName:"thermometer",slug:"/thermometer/ts28b",permalink:"/ihealthlabs-sdk-docs/ios/thermometer/ts28b",editUrl:"https://github.com/chenxuewei-ihealth/ihealthlabs-sdk-docs/tree/main/ios_versioned_docs/version-2.7.7/thermometer/ts28b.md",tags:[],version:"2.7.7",sidebarPosition:2,frontMatter:{title:"TS28B",sidebar_position:2},sidebar:"version-1.33.x/mainSidebar",previous:{title:"NT13B",permalink:"/ihealthlabs-sdk-docs/ios/thermometer/nt13b"},next:{title:"PT3SBT",permalink:"/ihealthlabs-sdk-docs/ios/thermometer/pt3sbt"}},d=[{value:"WorkFlow",id:"workflow",children:[]},{value:"Connection to device",id:"connection-to-device",children:[{value:"1.Listen to device notify",id:"1listen-to-device-notify",children:[]},{value:"2.Scan for TS28B devices",id:"2scan-for-ts28b-devices",children:[]},{value:"2.Stop Scan for TS28B devices",id:"2stop-scan-for-ts28b-devices",children:[]},{value:"3.Connect to TS28B devices",id:"3connect-to-ts28b-devices",children:[]}]},{value:"API reference",id:"api-reference",children:[{value:"Measure",id:"measure",children:[]},{value:"Disconnect",id:"disconnect",children:[]}]}],u={toc:d};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"workflow"},"WorkFlow"),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Scan and connect TS28B.")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"TS28B support online measurement."))),(0,c.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,c.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"\n<TS28BControllerDelegate>\n\n    \n")),(0,c.kt)("h3",{id:"2scan-for-ts28b-devices"},"2.Scan for TS28B devices"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"TS28BController *controller= [TS28BController sharedController];\n\n    self.controller.delegate=self;\n    \n    [self.controller startScan];\n")),(0,c.kt)("h3",{id:"2stop-scan-for-ts28b-devices"},"2.Stop Scan for TS28B devices"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"TS28BController *controller= [TS28BController sharedController];\n\n    \n    [self.controller stopScan];\n")),(0,c.kt)("h3",{id:"3connect-to-ts28b-devices"},"3.Connect to TS28B devices"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"- (void)controller:(TS28BController *)controller didDiscoverDevice:(TS28B *)device{\n   \n    self.connectedDevice=device;\n    \n     [self.controller connectDevice:self.connectedDevice];\n    \n   \n}\n- (void)controller:(TS28BController *)controller didConnectSuccessDevice:(TS28B *)device{\n  \n\n}\n- (void)controller:(TS28BController *)controller didConnectFailDevice:(TS28B *)device{\n   \n}\n- (void)controller:(TS28BController *)controller didDisconnectDevice:(TS28B *)device{\n   \n}\n")),(0,c.kt)("h2",{id:"api-reference"},"API reference"),(0,c.kt)("h3",{id:"measure"},"Measure"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"\n- (void)controller:(TS28BController *)controller device:(TS28B *)device didUpdateTemperature:(float)value temperatureUnit:(TemperatureUnit)unit measureDate:(NSDate *)date measureLocation:(TemperatureType)type{\n    \n    \n    \n}\n")),(0,c.kt)("h3",{id:"disconnect"},"Disconnect"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},"/**\n DisConnect with spectific device\n\n @param device TS28B object. You can get it from - (void)controller:(TS28BController *)controller didConnectSuccessDevice:(TS28B *)device;\n */\n- (void)disconnectDevice:(TS28B *)device;\n")))}p.isMDXComponent=!0}}]);