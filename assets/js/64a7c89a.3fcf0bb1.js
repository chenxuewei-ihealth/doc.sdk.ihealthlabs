"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3029],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),l=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(a),u=n,v=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?r.createElement(v,i(i({ref:t},p),{},{components:a})):r.createElement(v,i({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1673:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={title:"PO3",sidebar_position:1},i=void 0,c={unversionedId:"MacOS/blood_oxygen/po3",id:"MacOS/blood_oxygen/po3",title:"PO3",description:"WorkFlow",source:"@site/docs/MacOS/blood_oxygen/po3.md",sourceDirName:"MacOS/blood_oxygen",slug:"/MacOS/blood_oxygen/po3",permalink:"/ihealthlabs-sdk-docs/docs/MacOS/blood_oxygen/po3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MacOS/blood_oxygen/po3.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"PO3",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"KN550",permalink:"/ihealthlabs-sdk-docs/docs/MacOS/blood_pressure/kn550"},next:{title:"Get started",permalink:"/ihealthlabs-sdk-docs/docs/android/quickstart"}},s={},l=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for PO3 devices",id:"2scan-for-po3-devices",level:3},{value:"3.Connect to PO3 devices",id:"3connect-to-po3-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Sync time",id:"sync-time",level:3},{value:"Get the PO3 battery status",id:"get-the-po3-battery-status",level:3},{value:"Restore Historical data",id:"restore-historical-data",level:3},{value:"Start real-time measurement",id:"start-real-time-measurement",level:3},{value:"Disconnect the PO3",id:"disconnect-the-po3",level:3},{value:"GetChargeState",id:"getchargestate",level:3},{value:"Charge State  change Notification",id:"charge-state--change-notification",level:3},{value:"GetDeviceTime",id:"getdevicetime",level:3},{value:"Tool",id:"tool",level:3}],p={toc:l};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"workflow"},"WorkFlow"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Scan and connect PO3 device.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"PO3 support online measurement and offline measurement."))),(0,n.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,n.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:PO3ConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:PO3DisConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:PO3Discover object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:PO3ConnectFailed object:nil];\n            \n[PO3Controller shareIHPO3Controller];\n")),(0,n.kt)("h3",{id:"2scan-for-po3-devices"},"2.Scan for PO3 devices"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_PO3];\n")),(0,n.kt)("h3",{id:"3connect-to-po3-devices"},"3.Connect to PO3 devices"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_PO3 andSerialNub:deviceMac];\n")),(0,n.kt)("h2",{id:"api-reference"},"API reference"),(0,n.kt)("h3",{id:"sync-time"},"Sync time"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * Restore Sync time\n * @param syncTimeBlock Sync completed. Yes = Success, No = Fail.\n * @param errorBlock Communication error codes\n */\n-(void)commandPO3SyncTime:(DisposePO3SyncTimeBlock)syncTimeBlock withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"get-the-po3-battery-status"},"Get the PO3 battery status"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * Query power status\n * @param batteryBlock Battery\uff0cfrom 0\uff5e100\n * @param errorBlock Communication error codes\n */\n-(void)commandPO3GetDeviceBattery:(DisposePO3BatteryBlock)batteryBlock withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"restore-historical-data"},"Restore Historical data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * Restore Historical data\n * @param offlineDataCount Number of historical offline data measurements.\n * @param offlineData date, spo2, bpm, and wave.\n * @param offlineWaveData Pulse intensity, corresponding key: wave\n * @param finishUpload End transmission of data, yes for success, no for fail.\n * @param errorBlock Communication error codes\n */\n-(void)commandPO3OfflineDataCount:(DisposePO3OfflineDataCount)offlineDataCount withOfflineData:(DisposePO3OfflineData)offlineData withOfflineWaveData:(DisposePO3OfflineWaveData)offlineWaveData withFinishMeasure:(DisposePO3FinishUpload)finishUpload  withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"start-real-time-measurement"},"Start real-time measurement"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Restore Real-time measurements\n * @param startMeasure  Start measurement, Return no for fail, return yes for success.\n * @param measureData  SpO2 values, including SpO2, pulse rate, pulse intensity. Corresponding keys are spo2, bpm, wave, and pi.\n * @param finishMeasure  Finish measurement. No for fail, yes for success.\n * @param errorBlock Communication error codes\n */\n\n-(void)commandPO3StartMeasure:(DisposePO3StartMeasure)startMeasure withMeasureData:(DisposePO3MeasureData)measureData  withFinishMeasure:(DisposePO3FinishMeasure)finishMeasure  withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"disconnect-the-po3"},"Disconnect the PO3"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Disconnect connection\n * @param disconnectBlock  yes = success, no = fail.\n * @param errorBlock Communication error codes\n */\n-(void)commandPO3Disconnect:(DisposePO3DisconnectBlock)disconnectBlock withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"getchargestate"},"GetChargeState"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * GetChargeState    \uff08Firmware version must more than or equal to 3.1.1 support this API\uff09\n * @param state  PO3ChargeState\n * @param errorBlock Communication error codes\n */\n-(void)commandPO3GetChargeState:(DisposePO3ChargeState)state withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"charge-state--change-notification"},"Charge State  change Notification"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n \n Charge State  change Notification\uff08Firmware version must more than or equal to 3.1.1 support this API\uff09\n\n PO3NotificationChargeState\n\nYou need to listen to this message to get ChargeState\n \n {\n     state = 1;   0:PO3ChargeState_ExitCharge,   1: PO3ChargeState_Charging,\n }\n\n */\n")),(0,n.kt)("h3",{id:"getdevicetime"},"GetDeviceTime"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n* GetDeviceTime    \uff08Firmware version must more than or equal to 3.2.0 support this API\uff09\n* @param time  DeviceTime  \n* @param errorBlock Communication error codes\n*/\n-(void)commandPO3GetDeviceTime:(DisposePO3TimeBlock)time withErrorBlock:(DisposePO3ErrorBlock)errorBlock;\n")),(0,n.kt)("h3",{id:"tool"},"Tool"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"//Determine whether API for obtaining device time of new PO3 devices is supported\n-(BOOL)supportNewPO3GetDeviceTSCommand;\n\n")))}m.isMDXComponent=!0}}]);