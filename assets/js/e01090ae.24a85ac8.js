"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7869],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(n),v=r,m=u["".concat(l,".").concat(v)]||u[v]||p[v]||a;return n?o.createElement(m,i(i({ref:t},d),{},{components:n})):o.createElement(m,i({ref:t},d))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const a={title:"PO1",sidebar_position:1},i=void 0,c={unversionedId:"ios/blood_oxygen/po1",id:"ios/blood_oxygen/po1",title:"PO1",description:"WorkFlow",source:"@site/docs/ios/blood_oxygen/po1.md",sourceDirName:"ios/blood_oxygen",slug:"/ios/blood_oxygen/po1",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_oxygen/po1",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/blood_oxygen/po1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"PO1",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"BG1A",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_glucose/bg1a"},next:{title:"PO3",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_oxygen/po3"}},l={},s=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for PO1 devices",id:"2scan-for-po1-devices",level:3},{value:"3.Connect to PO1 devices",id:"3connect-to-po1-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Open buzzer for PO1 device",id:"open-buzzer-for-po1-device",level:3},{value:"Get battery for PO1 device",id:"get-battery-for-po1-device",level:3},{value:"Data Notify",id:"data-notify",level:3},{value:"Disconnect the PO1",id:"disconnect-the-po1",level:3}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"workflow"},"WorkFlow"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Scan and connect PO1 device.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"PO1 only support online measurement."))),(0,r.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,r.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:PO1Discover object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:PO1ConnectFailed object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:PO1ConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:PO1DisConnectNoti object:nil];\n            \n[PO1Controller shareIHPO1Controller];\n")),(0,r.kt)("h3",{id:"2scan-for-po1-devices"},"2.Scan for PO1 devices"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_PO1];\n")),(0,r.kt)("h3",{id:"3connect-to-po1-devices"},"3.Connect to PO1 devices"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_PO1 andSerialNub:deviceMac];\n")),(0,r.kt)("h2",{id:"api-reference"},"API reference"),(0,r.kt)("h3",{id:"open-buzzer-for-po1-device"},"Open buzzer for PO1 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * Get device IDPS\n * @param function  A block to return the function and states that the device supports.\n * {\n     MAC = 60A4232504ED;\n     accessoryName = "Pulse Oximeter";\n     firmwareVersion = "1.0.0";\n     hardwareVersion = "1.0.0";\n     manufaturer = iHealth;\n     modelNumber = "PO1 11070";\n     protocol = "com.jiuan.PO1";\n }\n * @param errorBlock  A block to refer \u2018error\u2019 in \u2018Establish measurement connection\u2019 in PO1.\n */\n-(void)commandFunction:(DisposePO1DeviceFunctionBlock)function DisposeErrorBlock:(DisposePO1ErrorBlock)errorBlock;\n')),(0,r.kt)("h3",{id:"get-battery-for-po1-device"},"Get battery for PO1 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Query power status\n * @param batteryBlock Battery\uff0cfrom 0\uff5e100\n * @param errorBlock Communication error codes\n */\n-(void)commandPO1GetDeviceBattery:(DisposePO1BatteryBlock)batteryBlock withErrorBlock:(DisposePO1ErrorBlock)errorBlock;\n")),(0,r.kt)("h3",{id:"data-notify"},"Data Notify"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\nMeasure data  Notification\n\n PO1NotificationMeasureData\n\nYou need to listen to this message to get real-time measurements\n \n The unit of PI is %.\n\nContent of measurement results\uff1a\n{\n    PI = "5.8";\n    bpm = 90;\n    height = 4;\n    spo2 = 98;\n    wave =     (\n        42,\n        41,\n        41,\n        41,\n        40\n    );\n}\n */\n\n')),(0,r.kt)("h3",{id:"disconnect-the-po1"},"Disconnect the PO1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n/*\n Disconnect current device\n */\n\n-(void)commandDisconnectDevice;\n")))}p.isMDXComponent=!0}}]);