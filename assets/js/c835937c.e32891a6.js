"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7062],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),p=a,f=u["".concat(c,".").concat(p)]||u[p]||m[p]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4491:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"HS4S",sidebar_position:4},c=void 0,l={unversionedId:"ios/scale/hs4s",id:"ios/scale/hs4s",title:"HS4S",description:"WorkFlow",source:"@site/docs/ios/scale/hs4s.md",sourceDirName:"ios/scale",slug:"/ios/scale/hs4s",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs4s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/scale/hs4s.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"HS4S",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"HS4",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs4"},next:{title:"HS5",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs5"}},d={},m=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for HS4S devices",id:"2scan-for-hs4s-devices",level:3},{value:"3.Connect to HS4S devices",id:"3connect-to-hs4s-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Get offline data",id:"get-offline-data",level:3},{value:"Start a online measurement",id:"start-a-online-measurement",level:3},{value:"Disconnect the HS4",id:"disconnect-the-hs4",level:3}],u={toc:m};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"workflow"},"WorkFlow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Scan and connect HS4S scale.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"HS4S support online measurement and offline measurement.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"For iOS system, HS4 and HS4S interface API is the same"))),(0,o.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,o.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:HS4Discover object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:HS4ConnectFailed object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:HS4ConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:HS4DisConnectNoti object:nil];\n\n[HS4Controller shareIHHs4Controller];\n")),(0,o.kt)("h3",{id:"2scan-for-hs4s-devices"},"2.Scan for HS4S devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_HS4];\n")),(0,o.kt)("h3",{id:"3connect-to-hs4s-devices"},"3.Connect to HS4S devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_HS4 andSerialNub:deviceMac];\n")),(0,o.kt)("h2",{id:"api-reference"},"API reference"),(0,o.kt)("h3",{id:"get-offline-data"},"Get offline data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n Upload memory data\n \n Return parameters:\n @param startTransmission Start Memory transmission.\n @param progress Memory transmission progress\uff0c[Range:0.0\uff5e1.0].\n @param memorryData Record data including weight (kg), measurement time\uff0ccoordinated key\uff1aweight\uff0cdate.[Range of weight 0.0~180.0(kg)]\n @param finishTransmission Finish memory transmission.\n @param disposeErrorBlock Record the error code in uploading process.\n */\n-(void)commandTransferMemorryData:(StartHS4Transmission)startTransmission DisposeProgress:(DisposeProgress)progress MemorryData:(MemorryData)memorryData FinishTransmission:(FinishHS4Transmission)finishTransmission DisposeErrorBlock:(DisposeHS4ErrorBlock)disposeErrorBlock;\n")),(0,o.kt)("h3",{id:"start-a-online-measurement"},"Start a online measurement"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n Establish memory and measurement connection\nImport parameter:\n @param tempUnit Unit displayed on HS4: HSUnit_Kg\u3001HSUnit_LB\u3001HSUnit_ST\u3002\n Return parameters:\n The measurement via SDK will be operated in the case of 1-4, and will be terminated if any of 5-8 occurs. The interface needs to be re-called after analyzing the return parameters.\n @param unStableWeight Current weight, (Kg) [Value Range:0~180]\n @param stableWeight Stable weight, (Kg) [Value Range:0~180]\n @param disposeErrorBlock  error code\n */\n-(void)commandMeasureWithUint:(HSUnit)tempUnit Weight:(UnStableWeight)unStableWeight StableWeight:(StableWeight)stableWeight DisposeErrorBlock:(DisposeHS4ErrorBlock)disposeErrorBlock;\n")),(0,o.kt)("h3",{id:"disconnect-the-hs4"},"Disconnect the HS4"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n Disconnect current device\n */\n\n-(void)commandDisconnectDevice;\n")))}p.isMDXComponent=!0}}]);