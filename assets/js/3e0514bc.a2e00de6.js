"use strict";(self.webpackChunkdoc_sdk=self.webpackChunkdoc_sdk||[]).push([[105],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return p}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=c(n),p=i,m=f["".concat(d,".").concat(p)]||f[p]||u[p]||o;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5954:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return s},default:function(){return f}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={},d="BP7S",c={unversionedId:"device/bp7s",id:"device/bp7s",isDocsHomePage:!1,title:"BP7S",description:"Import BP7S Module",source:"@site/docs/device/bp7s.md",sourceDirName:"device",slug:"/device/bp7s",permalink:"/doc.sdk.ihealthlabs/docs/device/bp7s",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/device/bp7s.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BP7",permalink:"/doc.sdk.ihealthlabs/docs/device/bp7"},next:{title:"ECG3",permalink:"/doc.sdk.ihealthlabs/docs/device/ecg"}},s=[{value:"Import BP7S Module",id:"import-bp7s-module",children:[]},{value:"APIs",id:"apis",children:[{value:"add and remove listener",id:"add-and-remove-listener",children:[]},{value:"get battery",id:"get-battery",children:[]},{value:"set unit",id:"set-unit",children:[]},{value:"get quantity of data stored in the bp5 device",id:"get-quantity-of-data-stored-in-the-bp5-device",children:[]},{value:"get data stored in the bp5 device",id:"get-data-stored-in-the-bp5-device",children:[]},{value:"disconnect device",id:"disconnect-device",children:[]},{value:"set angle range",id:"set-angle-range",children:[]},{value:"get bp7s device information",id:"get-bp7s-device-information",children:[]},{value:"get all connected devices",id:"get-all-connected-devices",children:[]}]}],u={toc:s};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bp7s"},"BP7S"),(0,o.kt)("h2",{id:"import-bp7s-module"},"Import BP7S Module"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  BP7SModule,\n  BPProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,o.kt)("h2",{id:"apis"},"APIs"),(0,o.kt)("h3",{id:"add-and-remove-listener"},"add and remove listener"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,o.kt)("h3",{id:"get-battery"},"get battery"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"BP7SModule.getBattery(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    if (event.action === BPProfileModule.ACTION_BATTERY_BP) {\n        console.log(event[BPProfileModule.BATTERY_BP]);\n    }\n});\n")),(0,o.kt)("h3",{id:"set-unit"},"set unit"),(0,o.kt)("p",null,"The API can change the unit of the bg5 display."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// unit :0 mmHg;1 kPa\nBP7SModule.setUnit(mac, 1);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    if (event.action === BPProfileModule.ACTION_SET_UNIT_SUCCESS_BP) {\n        console.log("set Unit");\n    }\n});\n')),(0,o.kt)("h3",{id:"get-quantity-of-data-stored-in-the-bp5-device"},"get quantity of data stored in the bp5 device"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"BP7SModule.getOfflineNum(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    if (e.action === BPProfileModule.ACTION_HISTORICAL_NUM_BP) {\n        console.log(event[BPProfileModule.HISTORICAL_NUM_BP]);\n    }\n});\n")),(0,o.kt)("h3",{id:"get-data-stored-in-the-bp5-device"},"get data stored in the bp5 device"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'BP7SModule.getOfflineData(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    if (e.action === BPProfileModule.ACTION_HISTORICAL_DATA_BP) {\n        let dataArray = event[BPProfileModule.HISTORICAL_DATA_BP];\n        if (dataArray == undefined) {\n            result = "There is not offline data in device"\n        }else {\n            for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n\n                console.log(offlineData[BPProfileModule.MEASUREMENT_DATE_BP]);\n                console.log(offlineData[BPProfileModule.HIGH_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[BPProfileModule.LOW_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[BPProfileModule.PULSE_BP]);\n                console.log(offlineData[BPProfileModule.MEASUREMENT_AHR_BP]);\n                console.log(offlineData[BPProfileModule.MEASUREMENT_HSD_BP]);\n                console.log(offlineData[BPProfileModule.DATAID]);\n            }\n        }\n    }\n});\n')),(0,o.kt)("h3",{id:"disconnect-device"},"disconnect device"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"BP7SModule.disConnect(mac);\n")),(0,o.kt)("h3",{id:"set-angle-range"},"set angle range"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * leftHigh  the maximum measure angle of left hand, the maximum value must less than 90\n * leftLow   the minimum measure angle of left hand, the minimum value must more than 0, and less than leftUpper\n * rightHigh the maximum measure angle of right hand, the maximum value must less than 90\n * leftLow   the minimum measure angle of right hand, the minimum value must more than 0, and less than rightUpper\n */\nBP7SModule.angleSet(mac, 80, 30, 80, 30);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BP7SModule.Event_Notify,  (event) => {\n    if (e.action === BPProfileModule.ACTION_SET_ANGLE_SUCCESS_BP) {\n        console.log("set angle");\n    }\n});\n')),(0,o.kt)("h3",{id:"get-bp7s-device-information"},"get bp7s device information"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"BP7SModule.getFunctionInfo(mac);\n")),(0,o.kt)("h3",{id:"get-all-connected-devices"},"get all connected devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"BP7SModule.getAllConnectedDevices();\n")))}f.isMDXComponent=!0}}]);