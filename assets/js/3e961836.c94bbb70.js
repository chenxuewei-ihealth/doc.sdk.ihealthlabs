"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[745],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>p});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(a),p=i,h=u["".concat(c,".").concat(p)]||u[p]||m[p]||r;return a?t.createElement(h,s(s({ref:n},d),{},{components:a})):t.createElement(h,s({ref:n},d))}));function p(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=u;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var l=2;l<r;l++)s[l]=a[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2417:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=a(7462),i=(a(7294),a(3905));const r={title:"AM6",sidebar_position:5},s=void 0,o={unversionedId:"ios/tracker/am6",id:"ios/tracker/am6",title:"AM6",description:"1. AM6 is a low-power activity tracker. It can track activity, sleep, heart rate and Blood oxygen.",source:"@site/docs/ios/tracker/am6.mdx",sourceDirName:"ios/tracker",slug:"/ios/tracker/am6",permalink:"/ihealthlabs-sdk-docs/docs/ios/tracker/am6",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/tracker/am6.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"AM6",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"AM5",permalink:"/ihealthlabs-sdk-docs/docs/ios/tracker/am5"},next:{title:"ECG3",permalink:"/ihealthlabs-sdk-docs/docs/ios/ecg/"}},c={},l=[{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify  and init",id:"1listen-to-device-notify--and-init",level:3},{value:"2.Scan for AM6 devices",id:"2scan-for-am6-devices",level:3},{value:"3.Connect to AM6 devices",id:"3connect-to-am6-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"How to bind user with AM6",id:"how-to-bind-user-with-am6",level:2},{value:"Bind user",id:"bind-user",level:3},{value:"Bind user success",id:"bind-user-success",level:3},{value:"Bind user fail",id:"bind-user-fail",level:3},{value:"Unbind user",id:"unbind-user",level:3},{value:"How to get started with AM6",id:"how-to-get-started-with-am6",level:2},{value:"Get AM6 information and sync time",id:"get-am6-information-and-sync-time",level:3},{value:"Set user information of the device",id:"set-user-information-of-the-device",level:3},{value:"Query notification switch",id:"query-notification-switch",level:3},{value:"Set notification switch",id:"set-notification-switch",level:3},{value:"Query whether ANCS has been authorized\uff08Only in iOS\uff09",id:"query-whether-ancs-has-been-authorizedonly-in-ios",level:3},{value:"Device settings",id:"device-settings",level:2},{value:"Find device",id:"find-device",level:3},{value:"Find phone",id:"find-phone",level:3},{value:"Reboot device",id:"reboot-device",level:3},{value:"Set wearing hand",id:"set-wearing-hand",level:3},{value:"Get wearing hand",id:"get-wearing-hand",level:3},{value:"Set target reminder",id:"set-target-reminder",level:3},{value:"Get target reminder",id:"get-target-reminder",level:3},{value:"Set sedentary reminder",id:"set-sedentary-reminder",level:3},{value:"Get sedentary reminder",id:"get-sedentary-reminder",level:3},{value:"Set raise to light",id:"set-raise-to-light",level:3},{value:"Get raise to light",id:"get-raise-to-light",level:3},{value:"Set do not disturb mode",id:"set-do-not-disturb-mode",level:3},{value:"Get do not disturb mode",id:"get-do-not-disturb-mode",level:3},{value:"Set Alarm",id:"set-alarm",level:3},{value:"Get Alarm",id:"get-alarm",level:3},{value:"How to sync data with AM6",id:"how-to-sync-data-with-am6",level:2},{value:"Prepare sync data   \uff08This API must be called before synchronizing all data\uff09",id:"prepare-sync-data---this-api-must-be-called-before-synchronizing-all-data",level:3},{value:"Delete specified historical data",id:"delete-specified-historical-data",level:3},{value:"Daily data",id:"daily-data",level:3},{value:"DailyStepsCalorieDistance",id:"dailystepscaloriedistance",level:3},{value:"Sleep data",id:"sleep-data",level:3},{value:"Blood oxygen data",id:"blood-oxygen-data",level:3},{value:"Daily Heart Rate",id:"daily-heart-rate",level:3},{value:"Activity data",id:"activity-data",level:3},{value:"Disconnect AM6 connection",id:"disconnect-am6-connection",level:3}],d={toc:l};function m(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol"},"AM6 is a low-power activity tracker. It can track activity, sleep, heart rate and Blood oxygen."),(0,i.kt)("li",{parentName:"ol"},"First use requires charging until the dial of watch displays a QR code."),(0,i.kt)("li",{parentName:"ol"},"After the user successfully bound, AM6 will enter the dial activity UI, if the user unbound will return to the QR code UI.")))),(0,i.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,i.kt)("h3",{id:"1listen-to-device-notify--and-init"},"1.Listen to device notify  and init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'\n/**\n AM6Discover\n {\n     BindStatus = 0;           //0: The watch is not bound (QR code state) 1: The watch is bound (normal state)\n     DeviceName = "AM6 1BD2DB";\n     RSSI = "-64";\n     SerialNumber = 004D321BD2DB;\n }\n */\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:AM6Discover object:nil];\n/**\n AM6ConnectFailed\n{\n    AM6ConnectErrorID = 0;\n    DeviceName = AM6;\n    ProtocolString = "com.jiuan.AM6V10";\n    SerialNumber = 004D321BD2DC;\n}\n\ntypedef NS_ENUM(NSUInteger, AM6DeviceConnectError) {\n    /// Communication error\n    AM6DeviceConnectError_OverTime = 0,\n    /// You did not receive a response within a certain period of time, usually clogged Bluetooth\n    AM6DeviceConnectError_NoRespond,\n    ///AuthError\n    AM6DeviceConnectError_AuthError,\n    ///AuthKeyError\n    AM6DeviceConnectError_AuthKeyError,\n    /// AM disconnect\n    AM6DeviceConnectError_Disconnect,\n};\n */       \n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:AM6ConnectFailed object:nil];\n\n\n/**\n AM6ConnectNoti\n{\n    DeviceName = AM6;\n    ID = "0A757F50-1508-A265-FCC6-8278888FDC4F";\n    ProtocolString = "com.jiuan.AM6V10";\n    SerialNumber = 004D321BD2DE;\n}\n */\n            \n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:AM6ConnectNoti object:nil];\n\n/**\n AM6DisConnectNoti\n{\n    DeviceName = AM6;\n    ProtocolString = "com.jiuan.AM6V10";\n    SerialNumber = 004D321BD2DE;\n}\n */\n            \n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:AM6DisConnectNoti object:nil];\n\n/**\nPlease initialize the Am6 configuration before scanning the device, otherwise the connection cannot be successfully scanned.\n */         \n [[AM6Controller shareAM6Controller] configAM6DeviceBleParameters];\n')),(0,i.kt)("h3",{id:"2scan-for-am6-devices"},"2.Scan for AM6 devices"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_AM6];\n")),(0,i.kt)("h3",{id:"3connect-to-am6-devices"},"3.Connect to AM6 devices"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\n///deviceMac is the mac of Am6, which can be obtained from the successful connection notification dictionary key is SerialNumber,\n\n[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_AM6 andSerialNub:deviceMac];\n")),(0,i.kt)("h2",{id:"api-reference"},"API reference"),(0,i.kt)("h2",{id:"how-to-bind-user-with-am6"},"How to bind user with AM6"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol"},"AM6 is used for the first time or is in an unbound state, and AM6 displays a QR code."),(0,i.kt)("li",{parentName:"ol"},"Call the API sendStartBindWithSuccess, AM6 enters the binding state."),(0,i.kt)("li",{parentName:"ol"},"Call the API sendSuccessBindWithUserId and pass user id to AM6, AM6 will save user id, and then wiil display UI of successful binding."),(0,i.kt)("li",{parentName:"ol"},"Call the API sendFailBindWithSuccess, AM6 will display UI of failure binding, and then fall back to UI of QR code.")))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"am6 binding",src:a(6421).Z,width:"960",height:"720"})),(0,i.kt)("h3",{id:"bind-user"},"Bind user"),(0,i.kt)("p",null,"Am6 enters the binding state."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * App sends StartBind to device\n *@param success  After calling this API, AM6 will display the pairing interface\n *@param fail  fail\n */\n- (void)sendStartBindWithSuccess:(DisposeAM6SuccessBlock)success\n                 fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"bind-user-success"},"Bind user success"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * The app sends the binding success to the device\n *@param userId   we recommend use user id's md5-16 value, 16 bytes length\n *@param success  After calling this API, AM6 will display the binding successful interface\n *@param fail  fail\n */\n- (void)sendSuccessBindWithUserId:(NSData*)userId\n                          success:(DisposeAM6SuccessBlock)success\n                              fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"bind-user-fail"},"Bind user fail"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * The app sends the binding fail to the device\n *@param success  After calling this API, AM6 will display the binding fail interface\n *@param fail  fail\n */\n- (void)sendFailBindWithSuccess:(DisposeAM6SuccessBlock)success\n                              fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"unbind-user"},"Unbind user"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * App sends unbind to device\n *@param userId   we recommend use user id's md5-16 value, 16 bytes length\n *@param success  success\n *@param fail  fail\n */\n- (void)sendUnbindWithUserId:(NSData*)userId\n                     success:(DisposeAM6SuccessBlock)success\n                        fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h2",{id:"how-to-get-started-with-am6"},"How to get started with AM6"),(0,i.kt)("h3",{id:"get-am6-information-and-sync-time"},"Get AM6 information and sync time"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * Query device information and synchronize time to the device\n *\n *The device must call this API every time it is connected, so that the latest time can be synchronized to AM6.\n *\n *@param success  You can get data by reading:  battery, isCharging,firmwareVersion,hardwareVersion,bindStatus\n *{\n * battery = 100;   Power 0-100\n * isCharging = 0;  0:NO Charging  1:Charging\n * firmwareVersion = "0.1.1";  FirmwareVersion\n * hardwareVersion = "1.0.0";  HardwareVersion\n * sdkFirmwareVersion = "1.0.0";  sdkFirmwareVersion\n * bindStatus = 1;    0: The watch is not bound (QR code state) 1: The watch is bound (normal state)\n}\n *@param fail  fail\n */\n- (void)queryDeviceInfoAndSyncTimeWithSuccess:(DisposeAM6SuccessBlock)success\n                                         fail:(DisposeAM6ErrorBlock)fail;\n')),(0,i.kt)("h3",{id:"set-user-information-of-the-device"},"Set user information of the device"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Set user info\n * Setting user information to AM6 is to calculate parameters such as step length, exercise sleep and so on.\n *@param userId we recommend use user id's md5-16 value, 16 bytes length\n *@param gender 0: male 1: female\n *@param age  age\n *@param height height, in cm  1-255(Please set strictly according to this range, and the data beyond the range will be assigned according to the upper and lower limits.)\n *@param weight Weight, in kg  1-300(Please set strictly according to this range, and the data beyond the range will be assigned according to the upper and lower limits.)\n *@param success  success\n *@param fail  fail\n */\n- (void)setUserInfoWithUserIdMD5:(NSData*)userId\n                          gender:(uint8_t)gender\n                             age:(uint8_t)age\n                          height:(uint8_t)height\n                          weight:(double)weight\n                         success:(DisposeAM6SuccessBlock)success\n                            fail:(DisposeAM6ErrorBlock)fail;\n\n\n\n\n## Set Notification \n\n:::info\nBefore setting nofication information, please set the mobile platform type.\n:::\n\n### Set phone platform\n\n```java\n/**\n * Set platform to iOS\n * @param success  The platform is set so that AM6 can normally receive notifications on the phone.After calling this API, the system will pop up a pop-up window asking whether to pair uniformly. If you choose to agree, then AM6 will perform Bluetooth pairing with the mobile phone, and next time AM6 will automatically connect to the mobile phone via Bluetooth. If you choose not to agree, then the AM6 and mobile phone Bluetooth will not be automatically connected.\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setPlatformWithSuccess:(DisposeAM6SuccessBlock)success\n                          fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"query-notification-switch"},"Query notification switch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Query notification switch\n * @param success   notificationEnable    0:close 1:open\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryNotificationStateWithSuccess:(DisposeAM6SuccessBlock)success\n                                     fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h3",{id:"set-notification-switch"},"Set notification switch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Set notification switch\n * @param enable YES\uff1aopen  NO\uff1aclose\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setNotificationStatus:(BOOL)enable\n                      success:(DisposeAM6SuccessBlock)success\n                         fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"query-whether-ancs-has-been-authorizedonly-in-ios"},"Query whether ANCS has been authorized\uff08Only in iOS\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Query whether ANCS has been authorized\n *\n *The purpose of Apple Notification Center Service (ANCS) is to provide a simple and convenient way for Bluetooth peripherals to obtain notification information of ios devices.\n *\n *If the query authorization is turned off, it will affect your normal  receiving notifications.\n */\n- (BOOL)queryAncsAuthorizedStatus NS_AVAILABLE_IOS(13);\n")),(0,i.kt)("h2",{id:"device-settings"},"Device settings"),(0,i.kt)("h3",{id:"find-device"},"Find device"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * findDevice\n * @param flag 0: start 1: end\n * @param success  If you call the search device interface, AM6 will keep vibrating\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)findDevice:(uint8_t)flag\n           success:(DisposeAM6SuccessBlock)success\n              fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"find-phone"},"Find phone"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"When the mobile phone is connected, click AM6 to find the function of the mobile phone, and the SDK will receive the message."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *Start FindPhone\n *\n *If you want to use this feature, please listen to this notification:\n *\n *AM6StartFindPhoneNoti\n *\n */\n\n/**\n * Stop FindPhone\n *\n *If you want to use this feature, please listen to this notification:\n *\n *AM6StopFindPhoneNoti\n *\n */\n")),(0,i.kt)("h3",{id:"reboot-device"},"Reboot device"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"After calling this API, AM6 will be disconnected."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * rebootDevice\n * @param success    Call this API, AM6 will disconnect from the phone and restart\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)rebootDeviceWithSuccess:(DisposeAM6SuccessBlock)success\n                           fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-wearing-hand"},"Set wearing hand"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setWearHand\n * @param hand 0x00: left 0x01: right\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setWearHand:(uint8_t)hand\n            success:(DisposeAM6SuccessBlock)success\n               fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"get-wearing-hand"},"Get wearing hand"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryWearHand\n * @param success wristHand:   0 left 1 right\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryWearHandWithSuccess:(DisposeAM6SuccessBlock)success\n                            fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-target-reminder"},"Set target reminder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setGoalReminder\n * @param enable YES\uff1aopen\uff0cNO\uff1aclose\n * @param calorie  Calorie Goal (0-65535 Cal)\n * @param steps  step goal(0-65534)\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setGoalReminderEnable:(BOOL)enable\n                      calorie:(uint32_t)calorie\n                        steps:(uint32_t)steps\n                      success:(DisposeAM6SuccessBlock)success\n                         fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"get-target-reminder"},"Get target reminder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryGoalReminder\n * @param success  :  isActivityGoalOn(YES or NO),caloGoal,stepsGoal\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryGoalReminderWithSuccess:(DisposeAM6SuccessBlock)success\n                                fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-sedentary-reminder"},"Set sedentary reminder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setStretchReminder\n * @param enable YES\uff1aopen\uff0cNO\uff1aclose\n * @param start  Minute to start (24-hour format, minimum 0 minutes)\n * @param end  Ending minute (24-hour format, max 1439 minutes)\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setStretchReminderEnable:(BOOL)enable\n                           start:(NSInteger)start\n                             end:(NSInteger)end\n                         success:(DisposeAM6SuccessBlock)success\n                            fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"get-sedentary-reminder"},"Get sedentary reminder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryStretchReminder\n * @param success  : isStretchReminderOn(YES or NO) ,stretchReminderStartTime(24-hour format, minimum 0 minutes),stretchReminderEndTime((24-hour format, max 1439 minutes)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryStretchReminderWithSuccess:(DisposeAM6SuccessBlock)success\n                                   fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-raise-to-light"},"Set raise to light"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setRaiseWake\n * @param enable YES\uff1aopen\uff0cNO\uff1aclose\n * @param start  Minute to start (24-hour format, minimum 0 minutes)\n * @param end  Ending minute (24-hour format, max 1439 minutes)\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setRaiseWakeEnable:(BOOL)enable\n                     start:(NSInteger)start\n                       end:(NSInteger)end\n                   success:(DisposeAM6SuccessBlock)success\n                      fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"get-raise-to-light"},"Get raise to light"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryRaiseWake\n * @param success : isRaiseToWakeOn(YES or NO) ,raiseToWakeStartTime (24-hour format, minimum 0 minutes),raiseToWakeEndTime(24-hour format, max 1439 minutes)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryRaiseWakeWithSuccess:(DisposeAM6SuccessBlock)success\n                             fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-do-not-disturb-mode"},"Set do not disturb mode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setNotDisturb\n * @param enable YES\uff1aopen\uff0cNO\uff1aclose\n * @param start  Minute to start (24-hour format, minimum 0 minutes)\n * @param end  Ending minute (24-hour format, max 1439 minutes)\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setNotDisturbEnable:(BOOL)enable\n                      start:(NSInteger)start\n                        end:(NSInteger)end\n                    success:(DisposeAM6SuccessBlock)success\n                       fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h3",{id:"get-do-not-disturb-mode"},"Get do not disturb mode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryNotDisturb\n * @param success  : isDoNotDisturbOn(YES or NO) ,doNotDisturbStartTime (24-hour format, minimum 0 minutes), doNotDisturbEndTime(24-hour format, max 1439 minutes)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryNotDisturbWithSuccess:(DisposeAM6SuccessBlock)success\n                              fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"set-alarm"},"Set Alarm"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * setAlartList\n * @param alarmArray AM6AlarmModel Array\n\nAM6AlarmModel \n// Switch Status\n@property (assign, nonatomic) BOOL isOn;\n\n/// Alarm Repeat Mode, randge: 0x00~0x7F, bit0-bit6 refer to Sunday to Staturday, 1: repeat 0: not repeat. For example, 0x41(0100 0001) means repeat at weekends, 0x3E(0011 1110) means repeat on weekdays and 0x00(0000 00000) means no repeat.\n@property (assign, nonatomic) uint8_t repeatMode;\n\n/// Only hour and minute Available\n@property (assign, nonatomic) struct AM6DateStruct date;\n- (nullable NSData*)commandData;\n- (instancetype)initWithData:(NSData*)data;\n\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)setAlartList:(NSArray<AM6AlarmModel*> *)alarmArray\n             success:(DisposeAM6SuccessBlock)success\n                fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h3",{id:"get-alarm"},"Get Alarm"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * queryAlarmList\n * @param success  alarmList(AM6AlarmModel)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)queryAlarmListWithSuccess:(DisposeAM6SuccessBlock)success\n                             fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h2",{id:"how-to-sync-data-with-am6"},"How to sync data with AM6"),(0,i.kt)("h3",{id:"prepare-sync-data---this-api-must-be-called-before-synchronizing-all-data"},"Prepare sync data   \uff08This API must be called before synchronizing all data\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Prepare the synchronization command. Before synchronizing data, you need to call this command once!!!!\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)prepareSyncWithSuccess:(DisposeAM6SuccessBlock)success\n                          fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"delete-specified-historical-data"},"Delete specified historical data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Delete specified historical data\n * @param type in order bit0: steps and calories bit1: sleep bit2: heart rate bit3: blood oxygen bit4: daily bit5: multi-sports, the highest bit is 1 all delete all the corresponding data on the above bits If you need to delete, it is 1 If you don\u2019t need to delete is 0\n *\n * type example\n * 0x0010     deleteDailyActivityReport\n * 0x0001     deleteDailyStepsCalorieDistance\n * 0x0002     deleteSleepData\n * 0x0004     deleteDailyHeartRate\n * 0x0008     deleteOfflineBloodOxygen\n * 0x0020     deleteSport\n * 0x8000    deleteAllData\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)deleteDataWithType:(uint16_t)type\n                   success:(DisposeAM6SuccessBlock)success\n                          fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"daily-data"},"Daily data"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The daily report is a summary of the data for the day."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Sync daily, up to 15 days\n * @param success  :NSArray<AM6DeviceDailyActivityReportModel*> *reportArray\n {\n calorie = 0;  // The calorie of daily report\n dateString = 20340101000000;   // The date of daily report\n effectiveStand = 0; //Effective standing mark 24bits to mark whether there is effective standing from 0~1 point, 1~2 point, ... to 23~24 point\n functionEnable = 2047;\n heartRate = 0;   // The heart rate of daily report\n heartRateAve = 0; ;// The ave heart rate of daily report\n heartRateMax = 0;// The max heart rate of daily report\n heartRateMaxTime = 20000000000000; // The time of day when your maximum heart rate occurs\n heartRateMin = 0;   // The min heart rate of daily report\n heartRateMinTime = 20000000000000;   // The time of day when the minimum heart rate occurs\n heartRateResting = 0;  // The rest heart rate of daily report\n spo2 = 0;   // The blood oxygen of daily report\n steps = 0;  // The step of daily report\n}\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)syncDailyActivityReportWithSuccess:(DisposeAM6SuccessBlock)success\n                                      fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"dailystepscaloriedistance"},"DailyStepsCalorieDistance"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Synchronize daily records of steps, calories, distance details, up to 15 days, 1 set of values per hour\n * @param success  :NSArray<AM6DeviceDailyStepModel*> *dailyStepsArray;\n (   {\n calorieArray =         (\n     2850............\n );\n dateString = 20210704000000;\n distanceArray =         (\n     2850.............\n );\n stepsArray =         (\n     2850.................\n );\n},\n)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)syncDailyStepsCalorieDistanceWithSuccess:(DisposeAM6SuccessBlock)success\n                                            fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"sleep-data"},"Sleep data"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This API returns sleep detail data in the form of sleep segments. Each sleep segment contains start date and sleep details. The start date starts at 0:00 of the current day. The sleep details include the sleep mode and the start time of this mode.\nFor example, a person goes to bed at 2023-06-27 23:11 in the evening and wakes up at 2023-06-28 02:19 o'clock the next morning."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Synchronized sleep, up to 15 days\n *\n *One sleep data per day. When the sleep state changes, add an item data point.\n *\n * @param success  :NSArray<AM6DeviceSleepModel*> *sleepArray;\n (  {\n         dataArray =         (\n                         {\n                 status = 1;//0x01 enter sleep 0x02 light sleep 0x03 deep sleep 0x04 wake up 0x05 exit sleep 0x06 rapid eye movement (REM)\n                 timeString = 2201;  //Sleep time   22:hour 01:minute\n             },\n         );\n         dateString = 20230204000000;//Sleep date\n     },\n)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n |  Sleep status | |\n| ---- | ---- |\n| 1 | start to sleep |\n| 2 | light sleep |\n| 3 | deep sleep |\n| 4 | wake |\n| 5 | exit sleep |\n| 6 | rapid eye movement (REM) |\n\n- (void)syncSleepWithSuccess:(DisposeAM6SuccessBlock)success\n                        fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"blood-oxygen-data"},"Blood oxygen data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Synchronous offline blood oxygen, 8\n * @param success  :NSArray<AM6DeviceOffineBloodOxygenModel*> *bloodOxygenArray;\n (\n {\n dateString = 20210704030100; //date\n value = 15; //For each measurement, increment the value by 1.\n},\n)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)syncOfflineBloodOxygenWithSuccess:(DisposeAM6SuccessBlock)success\n                                     fail:(DisposeAM6ErrorBlock)fail;\n")),(0,i.kt)("h3",{id:"daily-heart-rate"},"Daily Heart Rate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * Synchronize daily heart rate, up to 15 days\n * One value every 5 minutes, a total of 288 values per day.\n * @param success  :NSArray<AM6DeviceHeartRateModel*> *dailyHeartRateArray;\n (\n  {\n         dataArray =         ( // The value of heart rate\n             0..........\n         );\n         dateString = 20210704000000;//date\n  },\n)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n\n- (void)syncDailyHeartRateWithSuccess:(DisposeAM6SuccessBlock)success\n                                 fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h3",{id:"activity-data"},"Activity data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n * Synchronize sports data (dotted data and report data)\n *\n *The device uploads the daily data management results to the mobile phone, and counts the data every hour, including the number of steps, calories, and distance.\n * @param success  :\n NSArray<AM6DeviceIndoorRun*> *indoorRunArray\n (\n         {\n         dataArray =         (\n                         {\n                 calorieArray =   (                                //calorieArray\n                     61,\n                     61,..............\n                      )\n                 dateString = 20200229180100;        //date\n                 distanceArray =  (                             //distanceArray\n                     28,\n                     28,.................\n                   )\n                 stepArray=  (                                    //stepArray\n                     28,\n                     28,.................\n                   )\n                        }\n                    )\n         }\n )\n NSArray<AM6DeviceIndoorRunReport*> *indoorRunReportArray;\n (\n         {\n         anaerobicTime = 20;     // The anaerobic endurance duration, the unit is second\n         aveHeartRate = 178;     // The average heart rate\n         bodyEnergyCost = 0;    // The body energy expenditure, the range is 0 ~ 100\n         cardioTime = 20;          // The aerobic endurance duration, the unit is second\n         dataType = 0;              //dataType\n         endDateString = 20200229210100;  // The end time of activity\n         estimatedRecoveryTime = 0;            // The estimated recovery time\n         fatReductionTime = 20;      // The fat burning duration, the unit is second\n         maxHeartRate = 255;      // The max heart rate\n         maxOxygenUptake = 0;  // The max oxygen uptake, the unit is milliliter/minute\n         maxPace = 320;             // The max running pace, the unit is second / 100 meter\n         maxStepFrequency = 336;    // The max freguency of step\n         minHeartRate = 0;        // The min heart rate\n         minPace = 400;            // The min running pace, the unit is second / 100 meter\n         peakTime = 20;           // The ultimate heart rate duration, the unit is second\n         startDateString = 20200229180100;   // The start time of activity\n         timeZone = 0;                     //timeZone\n         totalCalorie = 65535;         //Current total active calories\n         totalDistance = 30000;      //Current total Distance\n         totalStep = 60000;            //Current total steps\n         totalTime = 10800;           //Current total Time\n         trainingEffect = 0;            // The training effect\n         type = 0;                          //type\n         typeDescription = 0;        //typeDescription\n         version = 0;                      //version\n         warnUpTime = 20;         // The warm up time, the unit is secode\n     },\n)\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n- (void)syncSportWithSuccess:(DisposeAM6SuccessBlock)success\n                        fail:(DisposeAM6ErrorBlock)fail;\n\n")),(0,i.kt)("h3",{id:"disconnect-am6-connection"},"Disconnect AM6 connection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Disconnect AM6 connection.\n * @param success  success\n * @param fail Communication error codes, see AM6 error descriptions.\n */\n-(void)commandAM6Disconnect:(DisposeAM6SuccessBlock)success\n                       fail:(DisposeAM6ErrorBlock)fail;\n\n")))}m.isMDXComponent=!0},6421:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/am6_binding-5ad84216f0028cd54b4501fcf34e8a03.png"}}]);