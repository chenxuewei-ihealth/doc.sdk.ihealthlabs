"use strict";(self.webpackChunksdk_docs=self.webpackChunksdk_docs||[]).push([[2399],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),f=s(t),p=o,v=f["".concat(c,".").concat(p)]||f[p]||u[p]||l;return t?r.createElement(v,i(i({ref:n},d),{},{components:t})):r.createElement(v,i({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=f;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9634:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var r=t(87462),o=t(63366),l=(t(67294),t(3905)),i=["components"],a={title:"HS2",sidebar_position:1},c=void 0,s={unversionedId:"scale/hs2",id:"version-1.4.9/scale/hs2",isDocsHomePage:!1,title:"HS2",description:"API Reference",source:"@site/react-native_versioned_docs/version-1.4.9/scale/hs2.md",sourceDirName:"scale",slug:"/scale/hs2",permalink:"/react-native/scale/hs2",editUrl:"https://github.com/dyte-in/docs/tree/main/react-native_versioned_docs/version-1.4.9/scale/hs2.md",tags:[],version:"1.4.9",sidebarPosition:1,frontMatter:{title:"HS2",sidebar_position:1},sidebar:"version-0.23.x/mainSidebar",previous:{title:"KN926",permalink:"/react-native/blood_pressure/kd926"},next:{title:"HS2S",permalink:"/react-native/scale/hs2s"}},d=[{value:"API Reference",id:"api-reference",children:[{value:"Import HS2 module",id:"import-hs2-module",children:[]},{value:"Add and remove listener",id:"add-and-remove-listener",children:[]},{value:"start a measurement",id:"start-a-measurement",children:[]},{value:"get data stored in the HS2 device",id:"get-data-stored-in-the-hs2-device",children:[]},{value:"disconnect device",id:"disconnect-device",children:[]},{value:"get all connected devices",id:"get-all-connected-devices",children:[]}]}],u={toc:d};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"api-reference"},"API Reference"),(0,l.kt)("h3",{id:"import-hs2-module"},"Import HS2 module"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  HS2Module,\n  HSProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,l.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(HS2Module.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,l.kt)("h3",{id:"start-a-measurement"},"start a measurement"),(0,l.kt)("p",null,"The API is asyn function. It will return message until finish measurement."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"HS2Module.startMeasure(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(HS2Module.Event_Notify,  (event) => {\n    if (event.action === HSProfileModule.ACTION_ONLINE_RESULT_HS) {\n        console.log(event[HSProfileModule.DATAID]);\n        console.log(event[HSProfileModule.WEIGHT_HS]);\n        console.log(event[HSProfileModule.FAT_HS]);\n        console.log(event[HSProfileModule.WATER_HS]);\n        console.log(event[HSProfileModule.MUSCLE_HS]);\n        console.log(event[HSProfileModule.SKELETON_HS]);\n        console.log(event[HSProfileModule.FATELEVEL_HS]);\n        console.log(event[HSProfileModule.DCI_HS]);\n    }\n});\n")),(0,l.kt)("h3",{id:"get-data-stored-in-the-hs2-device"},"get data stored in the HS2 device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'HS2Module.getOfflineData(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(HS2Module.Event_Notify,  (event) => {\n    if (event.action === HSProfileModule.ACTION_HISTORICAL_DATA_HS) {\n        let dataArray = event[HSProfileModule.HISTORDATA_HS];\n        if (dataArray == undefined) {\n            result = "There is not offline data in device"\n        }else {\n            for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n                console.log(offlineData[HSProfileModule.MEASUREMENT_DATE_HS]);\n                console.log(offlineData[HSProfileModule.WEIGHT_HS]);\n                console.log(offlineData[HSProfileModule.FAT_HS]);\n                console.log(offlineData[HSProfileModule.WATER_HS]);\n                console.log(offlineData[HSProfileModule.MUSCLE_HS]);\n                console.log(offlineData[HSProfileModule.SKELETON_HS]);\n                console.log(offlineData[HSProfileModule.FATELEVEL_HS]);\n                console.log(offlineData[HSProfileModule.DATAID]);\n            }\n        }\n    }\n});\n')),(0,l.kt)("h3",{id:"disconnect-device"},"disconnect device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"HS2Module.disConnect(mac);\n")),(0,l.kt)("h3",{id:"get-all-connected-devices"},"get all connected devices"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"HS2Module.getAllConnectedDevices();\n")))}f.isMDXComponent=!0}}]);