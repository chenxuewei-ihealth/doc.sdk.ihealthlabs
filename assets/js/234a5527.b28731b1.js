"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5412],{3905:(e,r,o)=>{o.d(r,{Zo:()=>d,kt:()=>p});var t=o(7294);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function a(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?a(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function i(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=t.createContext({}),l=function(e){var r=t.useContext(c),o=r;return e&&(o="function"==typeof e?e(r):s(s({},r),e)),o},d=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=l(o),p=n,S=m["".concat(c,".").concat(p)]||m[p]||u[p]||a;return o?t.createElement(S,s(s({ref:r},d),{},{components:o})):t.createElement(S,s({ref:r},d))}));function p(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=o.length,s=new Array(a);s[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=o[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},5891:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=o(7462),n=(o(7294),o(3905));const a={title:"HS2S Pro",sidebar_position:8},s=void 0,i={unversionedId:"ios/scale/hs2s pro",id:"ios/scale/hs2s pro",title:"HS2S Pro",description:"WorkFlow",source:"@site/docs/ios/scale/hs2s pro.md",sourceDirName:"ios/scale",slug:"/ios/scale/hs2s pro",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs2s pro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/scale/hs2s pro.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"HS2S Pro",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"HS6",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs6"},next:{title:"BG1",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_glucose/bg1"}},c={},l=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for HS2S Pro devices",id:"2scan-for-hs2s-pro-devices",level:3},{value:"3.Connect to HS2S Pro devices",id:"3connect-to-hs2s-pro-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Get the device info",id:"get-the-device-info",level:3},{value:"Get the battery info",id:"get-the-battery-info",level:3},{value:"Set the unit of device",id:"set-the-unit-of-device",level:3},{value:"Get the info of user in Device",id:"get-the-info-of-user-in-device",level:3},{value:"Create or update user info in device",id:"create-or-update-user-info-in-device",level:3},{value:"Delete user info in device",id:"delete-user-info-in-device",level:3},{value:"Get off line data count",id:"get-off-line-data-count",level:3},{value:"Get offline data",id:"get-offline-data",level:3},{value:"Delete offline data",id:"delete-offline-data",level:3},{value:"Get Anonymous Memory data count",id:"get-anonymous-memory-data-count",level:3},{value:"Get Anonymous Memory data",id:"get-anonymous-memory-data",level:3},{value:"Delete Anonymous Memory data",id:"delete-anonymous-memory-data",level:3},{value:"Measure",id:"measure",level:3},{value:"Guest Measure",id:"guest-measure",level:3},{value:"Reset device",id:"reset-device",level:3},{value:"Light up bluetooth",id:"light-up-bluetooth",level:3},{value:"Enter heart rate measurement mode",id:"enter-heart-rate-measurement-mode",level:3},{value:"Exit heart rate measurement mode",id:"exit-heart-rate-measurement-mode",level:3},{value:"Disconnect  device",id:"disconnect--device",level:3}],d={toc:l};function u(e){let{components:r,...o}=e;return(0,n.kt)("wrapper",(0,t.Z)({},d,o,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"workflow"},"WorkFlow"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Scan and connect HS2S Pro scale.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Get device info, if don't have any user info, create a user info and take a measure directly.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Get user info, if have this user info, get data stored in HS2S Pro. if don't have this user info, create a user info.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Get offline data and take measurement."))),(0,n.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,n.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:HS2SPRODiscover object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:HS2SPROConnectFailed object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:HS2SPROConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:HS2SPRODisConnectNoti object:nil];\n            \n[HS2SPROController shareIHHS2SPROController];\n")),(0,n.kt)("h3",{id:"2scan-for-hs2s-pro-devices"},"2.Scan for HS2S Pro devices"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_HS2SPro];\n")),(0,n.kt)("h3",{id:"3connect-to-hs2s-pro-devices"},"3.Connect to HS2S Pro devices"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_HS2SPro andSerialNub:deviceMac];\n")),(0,n.kt)("h2",{id:"api-reference"},"API reference"),(0,n.kt)("h3",{id:"get-the-device-info"},"Get the device info"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'/**\n *Get DeviceInfo (After the HS2S Pro device is successfully connected, the interface must be called to synchronize the device time. Otherwise, the offline data measurement time error will be caused)\n \n * @param successBlock Contains  device IDPS info(FirmwareVersion,HardwareVersion,Manufacture,ModelNumber,ProtocolString,SerialNumber),user count ,HS2S Pro current unit(1:Kg,2:LB,3:ST),battery\n * Example:\n * {\n           Battary = 70;\n           DeviceName = HS2SPro;\n           FirmwareVersion = "0.5.4";\n           HardwareVersion = "1.0.0";\n           Manufacture = iHealth;\n           ModelNumber = "HS2SPro 11070";\n           ProtocolString = "com.jiuan.BFSV22";\n           SerialNumber = 004D320CA04D;\n           Unit = 1;\n           UserCount = 1;\n * }\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPRODeviceInfo:(DisposeHS2SPRODeviceInfo)successBlock\n                 disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n')),(0,n.kt)("h3",{id:"get-the-battery-info"},"Get the battery info"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *Get Battery\n \n * @param successBlock battary [Range:0\uff5e100]%\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROBattery:(DisposeHS2SPROBatteryBlock)successBlock\n              disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"set-the-unit-of-device"},"Set the unit of device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n \n * Set Unit\n \n * Import parameter:\n * @param unit  -Unit displayed on HS2S Pro: HSUnit_Kg\u3001HSUnit_LB\u3001HSUnit_ST\u3002\n * Return parameters:\n * @param successBlock   \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n\n-(void)commandSetHS2SPROUnit:(HSUnit)unit\n                successBlock:(DisposeHS2SPROResult)successBlock\n           disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"get-the-info-of-user-in-device"},"Get the info of user in Device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Get UserInfo\n * Return parameters:\n * @param successBlock   success callback, see HS2SProUser\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROUserInfo:(DisposeHS2SPROUserInfo)successBlock\n               disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"create-or-update-user-info-in-device"},"Create or update user info in device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Create or Update UserInfo (The device only supports the creation of a maximum of 8 users)\n * Import parameter:\n * @param user (user information must be entered in accordance with the reference range, otherwise it may be impossible to measure the accurate body fat information)\n \n * contains:\n * userId:NSData type,The user ID must be 16 bytes or the user creation fails,\n * createTS:NSInteger type,The unit of time is seconds ,\n * weight:NSNumber type,range:20-150kg,\n * age:NSNumber type,range:18-99 years,\n * height:NSNumber type,range:90-220cm\n * sex:0 female 1 male,\n * impedanceMark: 0 Don't measure 1 Measure\n * fitnessMark:0 Don't fitness 1:fitness\n * Return parameters:\n * @param successBlock   \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandUpdateHS2SPROUserInfoWithUser:(HS2SProUser*)user\n                               successBlock:(DisposeHS2SPROResult)successBlock\n                          disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"delete-user-info-in-device"},"Delete user info in device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Delete User\n * Import parameter:\n * @param userId :NSData type,The user ID must be 16 bytes or the user creation fails,\n * Return parameters:\n * @param successBlock  \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandDeleteHS2SPROUserWithUserId:(NSData*)userId\n                             successBlock:(DisposeHS2SPROResult)successBlock\n                        disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"get-off-line-data-count"},"Get off line data count"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Get Memory data count\n * Import parameter:\n * @param userId :NSData type,The user ID must be 16 bytes or the user creation fails,\n * Return parameters:\n * @param successBlock  NSNumber Type,memory count  range: 0~500\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROMemoryDataCountWithUserId:(NSData*)userId\n                                     successBlock:(DisposeHS2SPROMemoryCountBlock)successBlock\n                                disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"get-offline-data"},"Get offline data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Get Memory data\n * Import parameter:\n * @param userId :NSData type,The user ID must be 16 bytes or the user creation fails,\n * Return parameters:\n * @param successBlock  success callback, see HS2SProMeasurementModel\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROMemoryDataWithUserId:(NSData*)userId\n                                successBlock:(DisposeHS2SPROMemoryDataBlock)successBlock\n                           disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"delete-offline-data"},"Delete offline data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Delete Memory data\n * Import parameter:\n * @param userId :NSData type,The user ID must be 16 bytes or the user creation fails,\n * Return parameters:\n * @param successBlock  \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandDeleteHS2SPROMemoryDataWithUserId:(NSData*)userId\n                                   successBlock:(DisposeHS2SPROResult)successBlock\n                              disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"get-anonymous-memory-data-count"},"Get Anonymous Memory data count"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Get Anonymous Memory data count\n * Return parameters:\n * @param successBlock memory count\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROAnonymousMemoryDataCount:(DisposeHS2SPROAnonymousMemoryCountBlock)successBlock\n                               disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"get-anonymous-memory-data"},"Get Anonymous Memory data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Get Anonymous Memory data\n * Return parameters:\n * @param successBlock   success callback, see HS2SProAnonymousModel\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandGetHS2SPROAnonymousMemoryData:(DisposeHS2SPROAnonymousMemoryDataBlock)successBlock\n                          disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"delete-anonymous-memory-data"},"Delete Anonymous Memory data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Delete Anonymous Memory data\n * Return parameters:\n * @param successBlock  \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandDeleteHS2SPROAnonymousMemoryData:(DisposeHS2SPROResult)successBlock\n                             disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"measure"},"Measure"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'/**\n *  Measure Data\n * Import parameter:\n * @param user (user information must be entered in accordance with the reference range, otherwise it may be impossible to measure the accurate body fat information)\n * @param realtimeWeightBlock the value means  changing weight value before the device gets a stable value. unit: kg\n * @param stableWeightBlock a stable weight value\n * @param weightAndBodyInfoBlock complete body info result, including body fat percentage and so on. Example:\n *{\n * MAC = 3CAA408E0002;\n * Result = "<HS2SProMeasurementModel: 0x283069700>";\n * SuccessFlag = 0; // 0: success 1: fail, not get impedance 2: fail, not compute body fat and other results successfully\n * }\n * @param disposeErrorBlock - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandStartHS2SPROMeasureWithUser:(HS2SProUser*)user\n                      realtimeWeightBlock:(DisposeHS2SPROUnStableWeight)realtimeWeightBlock\n                        stableWeightBlock:(DisposeHS2SPROStableWeight)stableWeightBlock\n                   weightAndBodyInfoBlock:(DisposeHS2SPROWeightAndBodyInfo)weightAndBodyInfoBlock\n                        disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n')),(0,n.kt)("h3",{id:"guest-measure"},"Guest Measure"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Guest Measure Data\n * Import parameter:\n * @param realtimeWeightBlock the value means  changing weight value before the device gets a stable value. unit: kg\n * @param stableWeightBlock a stable weight value\n * @param disposeErrorBlock - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandStartHS2SPROGuestMeasureWithRealtimeWeightBlock:(DisposeHS2SPROUnStableWeight)realtimeWeightBlock\n                                             stableWeightBlock:(DisposeHS2SPROStableWeight)stableWeightBlock\n                                             disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"reset-device"},"Reset device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Reset device\n * Return parameters:\n * @param successBlock   \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandResetHS2SPRODevice:(DisposeHS2SPROResult)successBlock\n               disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"light-up-bluetooth"},"Light up bluetooth"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *  Show bluetooth symbol in device's screen.\n * Return parameters:\n * @param successBlock  \n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandShowBluetoothLightWithSuccessBlock:(DisposeHS2SPROResult)successBlock\n                        disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"enter-heart-rate-measurement-mode"},"Enter heart rate measurement mode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n *  Enter heart rate measurement mode\n * Return parameters:\n * @param result example:\n  * heartResultDic:\n  * {\n  *     HS2SProNotiKeyHeartRate = 89;\n  *     HS2SProNotiKey_MeasureSuccessFlag = 0; // no error\n  *     MAC = 3CAA408E0005;\n  * }\n  * {\n  *     HS2SProNotiKey_MeasureSuccessFlag\" = 1; // error 1: no real-time data received in 6s, 2:  the algorithm judges that the user is weighing down,3:  calculation failed,4: 30s timeout\n  *     MAC = 3CAA408E0005;\n  * }\n * @param status ( 1: User on the scale,2: User referred below,3: The user's heartbeat signal is detected)\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandEnterHS2SPROHeartRateMeasurementMode:(DisposeHS2SPROHeartResult)result\n                                 measurementStatus:(DisposeHS2SPROMeasurementStatus)status\n                                 disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n")),(0,n.kt)("h3",{id:"exit-heart-rate-measurement-mode"},"Exit heart rate measurement mode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n *  Exit heart rate measurement mode\n * Return parameters:\n * @param result   success callback\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2S Pro error instruction.\n */\n-(void)commandExitHS2SPROHeartRateMeasurementMode:(DisposeHS2SPROResult)result disposeErrorBlock:(DisposeHS2SPROErrorBlock)disposeErrorBlock;\n\n")),(0,n.kt)("h3",{id:"disconnect--device"},"Disconnect  device"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"/**\n Disconnect current device\n */\n\n- (void)commandDisconnectDevice;\n\n")))}u.isMDXComponent=!0}}]);