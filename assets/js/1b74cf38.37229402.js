"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8424],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>u});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},S=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),S=c(n),u=a,p=S["".concat(l,".").concat(u)]||S[u]||d[u]||r;return n?i.createElement(p,s(s({ref:t},g),{},{components:n})):i.createElement(p,s({ref:t},g))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=S;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}S.displayName="MDXCreateElement"},6483:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const r={title:"HS2S",sidebar_position:2},s=void 0,o={unversionedId:"android/scale/hs2s",id:"android/scale/hs2s",title:"HS2S",description:"WorkFlow",source:"@site/docs/android/scale/hs2s.md",sourceDirName:"android/scale",slug:"/android/scale/hs2s",permalink:"/ihealthlabs-sdk-docs/docs/android/scale/hs2s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/android/scale/hs2s.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"HS2S",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"HS2",permalink:"/ihealthlabs-sdk-docs/docs/android/scale/hs2"},next:{title:"HS4",permalink:"/ihealthlabs-sdk-docs/docs/android/scale/hs4"}},l={},c=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for HS2S devices",id:"2scan-for-hs2s-devices",level:3},{value:"3.Connect to HS2S devices",id:"3connect-to-hs2s-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Get the device info",id:"get-the-device-info",level:3},{value:"Get the battery info",id:"get-the-battery-info",level:3},{value:"Set the unit of device",id:"set-the-unit-of-device",level:3},{value:"Get the info of user in hs2s",id:"get-the-info-of-user-in-hs2s",level:3},{value:"Create or update user info in device",id:"create-or-update-user-info-in-device",level:3},{value:"Delete user info in device",id:"delete-user-info-in-device",level:3},{value:"Specify tourist users",id:"specify-tourist-users",level:3},{value:"Specify Online Users",id:"specify-online-users",level:3},{value:"Get off line data count",id:"get-off-line-data-count",level:3},{value:"Get offline data",id:"get-offline-data",level:3},{value:"Delete offline data",id:"delete-offline-data",level:3},{value:"Start heart rate measurement mode",id:"start-heart-rate-measurement-mode",level:3},{value:"Stop heart rate measurement mode",id:"stop-heart-rate-measurement-mode",level:3}],g={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"workflow"},"WorkFlow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Scan and connect Hs2s scale.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get device info, if don't have any user info, create a user info and take a measure directly.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get user info, if have this user info, get data stored in hs2s. if don't have this user info, create a user info.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get offline data and take measurement."))),(0,a.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,a.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"private iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n\n    @Override\n    public void onScanDevice(String mac, String deviceType, int rssi, Map manufactorData) { }\n\n    @Override\n    public void onDeviceConnectionStateChange(String mac, String deviceType, int status, int errorID, Map manufactorData){ }\n\n    @Override\n    public void onScanError(String reason, long latency) { }\n\n    @Override\n    public void onScanFinish() { }\n\n    @Override\n    public void onDeviceNotify(String mac, String deviceType,\n                                String action, String message) { }\n}\nint callbackId = iHealthDevicesManager.getInstance().registerClientCallback(miHealthDevicesCallback);\niHealthDevicesManager.getInstance().addCallbackFilterForDeviceType(callbackId, iHealthDevicesManager.TYPE_HS2S);\niHealthDevicesManager.getInstance().addCallbackFilterForAddress(callbackId, String... macs)\n")),(0,a.kt)("h3",{id:"2scan-for-hs2s-devices"},"2.Scan for HS2S devices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"iHealthDevicesManager.getInstance().startDiscovery(DiscoveryTypeEnum.HS2S);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Return\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n\n    @Override\n    public void onScanDevice(String mac, String deviceType, int rssi, Map manufactorData) {\n        Log.i(TAG, "onScanDevice - mac:" + mac + " - deviceType:" + deviceType + " - rssi:" + rssi + " - manufactorData:" + manufactorData);\n    }\n}\n')),(0,a.kt)("h3",{id:"3connect-to-hs2s-devices"},"3.Connect to HS2S devices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'iHealthDevicesManager.getInstance().connectDevice("", mac, iHealthDevicesManager.TYPE_HS2S)\n\nHs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\n')),(0,a.kt)("h2",{id:"api-reference"},"API reference"),(0,a.kt)("h3",{id:"get-the-device-info"},"Get the device info"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.getDeviceInfo();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_GET_DEVICE_INFO.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int userCount = obj.getInt(Hs2sProfile.HS_USER_COUNT)\n                int unit = obj.getInt(Hs2sProfile.HS_UNIT_CURRENT)\n                int bettery = obj.getInt(Hs2sProfile.BATTERY_HS)\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"get-the-battery-info"},"Get the battery info"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.getBattery();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_BATTERY_HS.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt(Hs2sProfile.BATTERY_HS)\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"set-the-unit-of-device"},"Set the unit of device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\n\n//  Hs2sProfile#UNIT_LB}  <br>  {@link Hs2sProfile#UNIT_ST\ncontrol.setUnit(Hs2sProfile.UNIT_KG);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_SET_UNIT_SUCCESS.equals(action)) {\n\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"get-the-info-of-user-in-hs2s"},"Get the info of user in hs2s"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.getUserInfo();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_GET_USER_INFO.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int userCount = obj.getInt(Hs2sProfile.USER_INFO_COUNT);\n                JSONArray userArr = obj.gegetJSONArray(Hs2sProfile.USER_INFO_ARRAY);\n                for (int i = 0; i < userCount; i++) {\n                    JSONObject user = userArr.getJSONObject(i);\n\n                    String    userId = user.getString(Hs2sProfile.USER_INFO_USER_ID);\n                    long        time = user.getLong(Hs2sProfile.USER_INFO_CREATE_TIME);\n                    String    weigth = user.getString(Hs2sProfile.USER_INFO_WEIGHT);\n                    int       gender = user.getInt(Hs2sProfile.USER_INFO_GENDER);\n                    int          age = user.getInt(Hs2sProfile.USER_INFO_AGE);\n                    int       height = user.getInt(Hs2sProfile.USER_INFO_HEIGHT);\n                    int bodybuilding = user.getInt(Hs2sProfile.USER_INFO_BODYBUILDING);\n                }\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"create-or-update-user-info-in-device"},"Create or update user info in device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\n/*\n * @param id           User id  (The length of ID must be 16)\n * @param weight       weight   (unit kg     range: 20kg-180kg)\n * @param gender       0:women      1:man\n * @param age          age    18-99  (If it is not within this range, it is impossible to measure the constitution correctly.)\n * @param height       height  90-220 cm    (If it is not within this range, it is impossible to measure the constitution correctly.)\n * @param impedance    0:No body fat measurement    1:body fat measurement\n * @param bodybuilding 0:No   Bodybuilding          1:Bodybuilding\n */\ncontrol.createOrUpdateUserInfo(String id, float weight, int gender, int age, int height, int impedance, int bodybuilding);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_CREATE_OR_UPDATE_USER_INFO.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"delete-user-info-in-device"},"Delete user info in device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.deleteUserInfo(String id);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_DELETE_USER_INFO.equals(action)) {\n            try {\n               JSONObject obj = new JSONObject(message);\n               int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n               String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"specify-tourist-users"},"Specify tourist users"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.specifyTouristUsers();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_SPECIFY_USERS.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.ACTION_ONLINE_REAL_TIME_WEIGHT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                Double weight = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.ACTION_ONLINE_RESULT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                String dataId = obj.getInt(Hs2sProfile.DATA_ID);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                Double weight = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"specify-online-users"},"Specify Online Users"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\n/*\n * @param id           User id  (The length of ID must be 16)\n * @param weight       weight   (unit kg     range: 20kg-180kg)\n * @param gender       0:women      1:man\n * @param age          age    18-99  (If it is not within this range, it is impossible to measure the constitution correctly.)\n * @param height       height  90-220 cm    (If it is not within this range, it is impossible to measure the constitution correctly.)\n * @param impedance    0:No body fat measurement    1:body fat measurement\n * @param bodybuilding 0:No   Bodybuilding          1:Bodybuilding\n */\ncontrol.specifyOnlineUsers(String id,\n                           float weight,\n                           int gender,\n                           int age,\n                           int height,\n                           int impedance,\n                           int bodybuilding)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_SPECIFY_USERS.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.ACTION_ONLINE_REAL_TIME_WEIGHT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                Double weight = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.ACTION_ONLINE_RESULT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                String dataId = obj.getInt(Hs2sProfile.DATA_ID);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                Double weight = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.ACTION_ONLINE_RESULT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                String dataId = obj.getInt(Hs2sProfile.DATA_ID);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                Double weight = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } else if (Hs2sProfile.DATA_BODY_FAT_RESULT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                Double weight = obj.getDouble(Hs2sProfile.OPERATION_DESCRIBE);\n                String dataId = obj.getString(Hs2sProfile.DATA_ID);\n                Double description = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n                int userCount = obj.getString(Hs2sProfile.DATA_USER_NUM);\n                int gender = obj.getString(Hs2sProfile.DATA_GENDER);\n                int age = obj.getString(Hs2sProfile.DATA_AGE);\n                int height = obj.getString(Hs2sProfile.DATA_HEIGHT);\n                long measureTs = obj.getLong(Hs2sProfile.DATA_MEASURE_TIME);\n                int bodyBuilding = obj.getInt(Hs2sProfile.DATA_BODYBUILDING);\n                int type = obj.getInt(Hs2sProfile.DATA_INSTRUCTION_TYPE);\n\n                JSONObject objResult = obj.getJSONObject(Hs2sProfile.DATA_BODY_FAT_RESULT);\n                String bodyFit = obj.getString(Hs2sProfile.DATA_BODY_FIT_PERCENTAGE);\n                String muscleMass = obj.getString(Hs2sProfile.DATA_MUSCLE_MASS);\n                String boneSaltContent = obj.getString(Hs2sProfile.DATA_BONE_SALT_CONTENT);\n                String bodyWater = obj.getString(Hs2sProfile.DATA_BODY_WATER_RATE);\n                String protein = obj.getString(Hs2sProfile.DATA_PROTEIN_RATE);\n                String skeletalMuscleMass = obj.getString(Hs2sProfile.DATA_SKELETAL_MUSCLE_MASS);\n                String visceralFat = obj.getString(Hs2sProfile.DATA_VISCERAL_FAT_GRADE);\n                String physicalAge = obj.getString(Hs2sProfile.DATA_PHYSICAL_AGE);\n                String standardWeight = obj.getString(Hs2sProfile.DATA_STANDARD_WEIGHT);\n                String weightControl = obj.getString(Hs2sProfile.DATA_WEIGHT_CONTROL);\n                String muscleControl = obj.getString(Hs2sProfile.DATA_MUSCLE_CONTROL);\n                String fatControl = obj.getString(Hs2sProfile.DATA_FAT_CONTROL);\n                String fatWeight = obj.getString(Hs2sProfile.DATA_FAT_WEIGHT);\n\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"get-off-line-data-count"},"Get off line data count"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.getOfflineDataCount(String... IDArray);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_HISTORY_DATA_NUM.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int userCount = obj.getInt(Hs2sProfile.HISTORY_DATA_USER_COUNT);\n                JSONArray countArr = obj.gegetJSONArray(Hs2sProfile.HISTORY_DATA_COUNT_ARRAY);\n                for (int i = 0; i < userCount; i++) {\n                    JSONObject countObj = userArr.getJSONObject(i);\n                    int count = countObj.getInt(Hs2sProfile.HISTORY_DATA_COUNT);\n                }\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"get-offline-data"},"Get offline data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.getOfflineData(String id)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_HISTORY_DATA.equals(action)) {\n            try {\n                JSONArray historyArr = new JSONArray(message);\n                for (int i = 0; i < historyArr.length(); i++) {\n                    JSONObject obj = historyArr.getJSONObject(i);\n                    int status = obj.getInt(Hs2sProfile.OPERATION_STATUS);\n                    Double weight = obj.getDouble(Hs2sProfile.OPERATION_DESCRIBE);\n                    String dataId = obj.getString(Hs2sProfile.DATA_ID);\n                    Double description = obj.getDouble(Hs2sProfile.DATA_WEIGHT);\n                    int userCount = obj.getString(Hs2sProfile.DATA_USER_NUM);\n                    int gender = obj.getString(Hs2sProfile.DATA_GENDER);\n                    int age = obj.getString(Hs2sProfile.DATA_AGE);\n                    int height = obj.getString(Hs2sProfile.DATA_HEIGHT);\n                    long measureTs = obj.getLong(Hs2sProfile.DATA_MEASURE_TIME);\n                    int bodyBuilding = obj.getInt(Hs2sProfile.DATA_BODYBUILDING);\n                    int type = obj.getInt(Hs2sProfile.DATA_INSTRUCTION_TYPE);\n\n                    JSONObject objResult = obj.getJSONObject(Hs2sProfile.DATA_BODY_FAT_RESULT);\n                    String bodyFit = obj.getString(Hs2sProfile.DATA_BODY_FIT_PERCENTAGE);\n                    String muscleMass = obj.getString(Hs2sProfile.DATA_MUSCLE_MASS);\n                    String boneSaltContent = obj.getString(Hs2sProfile.DATA_BONE_SALT_CONTENT);\n                    String bodyWater = obj.getString(Hs2sProfile.DATA_BODY_WATER_RATE);\n                    String protein = obj.getString(Hs2sProfile.DATA_PROTEIN_RATE);\n                    String skeletalMuscleMass = obj.getString(Hs2sProfile.DATA_SKELETAL_MUSCLE_MASS);\n                    String visceralFat = obj.getString(Hs2sProfile.DATA_VISCERAL_FAT_GRADE);\n                    String physicalAge = obj.getString(Hs2sProfile.DATA_PHYSICAL_AGE);\n                    String standardWeight = obj.getString(Hs2sProfile.DATA_STANDARD_WEIGHT);\n                    String weightControl = obj.getString(Hs2sProfile.DATA_WEIGHT_CONTROL);\n                    String muscleControl = obj.getString(Hs2sProfile.DATA_MUSCLE_CONTROL);\n                    String fatControl = obj.getString(Hs2sProfile.DATA_FAT_CONTROL);\n                    String fatWeight = obj.getString(Hs2sProfile.DATA_FAT_WEIGHT);\n                }\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"delete-offline-data"},"Delete offline data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.deleteOfflineData(String id);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_DELETE_HISTORY_DATA.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int status = obj.getInt(Hs2sProfile.OPERATION_STATUS)\n                String description = obj.getString(Hs2sProfile.OPERATION_DESCRIBE)\n\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"start-heart-rate-measurement-mode"},"Start heart rate measurement mode"),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Only Hs2s Pro and Black Hs2s support heart rate measurement"))),(0,a.kt)("p",null,"If you call this function, Hs2s will switch to heart rate measurement mode and the weight measurement is not availabe.\nIf you want to start the weight measurement, need to call the stopHeartRateMode function or disconnect the Hs2s BLE's connection with Phone."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.startHeartRateMode();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_START_HEARTRATE_MEASURE.equals(action)) {\n            Log.i("", "Heart rate measurement is started");\n\n        } else if (Hs2sProfile.ACTION_HEARTRATE_REALTIME_MEASURE.equals(action)) {\n            Log.i("", "Heart rate measurement is in progress");\n\n        } else if (Hs2sProfile.ACTION_HEARTRATE_RESULT.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int heartrate = obj.getInt(Hs2sProfile.DATA_HEARTRATE);\n                Log.i("", "The heartrate is " + heartrate);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"stop-heart-rate-measurement-mode"},"Stop heart rate measurement mode"),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Only Hs2s Pro and Black Hs2s support heart rate measurement"))),(0,a.kt)("p",null,"If you call this function, Hs2s will stop heart rate measurement mode and back to the weight measurement mode."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Hs2sControl control = iHealthDevicesManager.getInstance().getHs2sControl(mDeviceMac);\ncontrol.stopHeartRateMode();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Hs2sProfile.ACTION_STOP_HEARTRATE_MEASURE.equals(action)) {\n            Log.i("", "Heart rate measurement is stop");\n        }\n    }\n}\n')))}d.isMDXComponent=!0}}]);