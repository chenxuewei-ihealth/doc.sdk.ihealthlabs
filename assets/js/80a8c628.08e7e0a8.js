"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4256],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),d=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=d(e.components);return o.createElement(l.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=d(t),f=r,p=u["".concat(l,".").concat(f)]||u[f]||g[f]||i;return t?o.createElement(p,a(a({ref:n},s),{},{components:t})):o.createElement(p,a({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var d=2;d<i;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1296:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return g}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),a=["components"],c={title:"BG1",sidebar_position:1},l=void 0,d={unversionedId:"android/blood_glucose/bg1",id:"android/blood_glucose/bg1",title:"BG1",description:"Connection workflow",source:"@site/docs/android/blood_glucose/bg1.md",sourceDirName:"android/blood_glucose",slug:"/android/blood_glucose/bg1",permalink:"/ihealthlabs-sdk-docs/docs/android/blood_glucose/bg1",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/android/blood_glucose/bg1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"BG1",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"HS6",permalink:"/ihealthlabs-sdk-docs/docs/android/scale/hs6"},next:{title:"BG1S",permalink:"/ihealthlabs-sdk-docs/docs/android/blood_glucose/bg1s"}},s={},g=[{value:"Connection workflow",id:"connection-workflow",level:2},{value:"1. Register Broadcast",id:"1-register-broadcast",level:3},{value:"2. The BG1 device plug your 3.5mm headphone jack and connect bg1 connect",id:"2-the-bg1-device-plug-your-35mm-headphone-jack-and-connect-bg1-connect",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Parse bottle Info of the QRCode",id:"parse-bottle-info-of-the-qrcode",level:3},{value:"Send code to BG1 device",id:"send-code-to-bg1-device",level:3},{value:"Notify a measurement",id:"notify-a-measurement",level:3}],u={toc:g};function f(e){var n=e.components,c=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,c,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"connection-workflow"},"Connection workflow"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"bg1 connection",src:t(7974).Z,width:"318",height:"364"})),(0,i.kt)("h3",{id:"1-register-broadcast"},"1. Register Broadcast"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private void registerBroadcast() {\n    IntentFilter filter = new IntentFilter();\n    filter.addAction(Intent.ACTION_HEADSET_PLUG);\n\n    filter.addAction(Bg1Profile.ACTION_BG1_DEVICE_READY);\n    filter.addAction(Bg1Profile.ACTION_BG1_IDPS);\n    filter.addAction(Bg1Profile.ACTION_BG1_CONNECT_RESULT);\n    filter.addAction(Bg1Profile.ACTION_BG1_SENDCODE_RESULT);\n\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_ERROR);\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_STRIP_IN);\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_STRIP_OUT);\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_GET_BLOOD);\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_RESULT);\n    filter.addAction(Bg1Profile.ACTION_BG1_MEASURE_STANDBY);\n    this.registerReceiver(mBroadcastReceiver, filter);\n}\n")),(0,i.kt)("h3",{id:"2-the-bg1-device-plug-your-35mm-headphone-jack-and-connect-bg1-connect"},"2. The BG1 device plug your 3.5mm headphone jack and connect bg1 connect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'\nBroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        String action = intent.getAction();\n        if (action.equals(Intent.ACTION_HEADSET_PLUG)) {\n            if (intent.hasExtra("state")) {\n                if (intent.getIntExtra("state", 0) == 0) {\n                    mBg1Control.disconnect();\n                    Log.i("", "move out from 3.5mm headphone jack");           \n                }\n                if (intent.getIntExtra("state", 0) == 1) {\n                    Log.i("", "plug in 3.5mm headphone jack");  \n                    mBg1Control.connect();\n                }\n            }\n        }\n        else if (action.equals(Bg1Profile.ACTION_BG1_DEVICE_READY)) {\n            Log.i("", "device handshake");  \n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_IDPS)) {\n            String idps = intent.getStringExtra(Bg1Profile.BG1_IDPS);\n            Log.i("", "idps: "+idps);\n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_CONNECT_RESULT)) {\n            int flag = intent.getIntExtra(Bg1Profile.BG1_CONNECT_RESULT, -1);\n            Log.i("", "conect flag: " + flag);\n            if (flag == 0) {\n                Log.i("", "connect success, please send code");\n                // If you use control solution.\n                // mBg1Control.sendCode(QRCode, Bg1Profile.CODE_GOD, Bg1Profile.MEASURE_CTL);\n                \n                // If you work on the real measurement.\n                // mBg1Control.sendCode(QRCode, Bg1Profile.CODE_GOD, Bg1Profile.MEASURE_BLOOD);\n\n            } else {\n                Log.i("", "connect failed");\n                mBg1Control.disconnect();\n            }\n        }\n    }\n}\n')),(0,i.kt)("h2",{id:"api-reference"},"API reference"),(0,i.kt)("h3",{id:"parse-bottle-info-of-the-qrcode"},"Parse bottle Info of the QRCode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Return value: {"bottleInfo":[{"bottleId":"18882266","overDate":"2015-06-26","stripNum":"25"}]}\nString info = Bg1Control.getBottleInfoFromQR(String QRCode);\n')),(0,i.kt)("h3",{id:"send-code-to-bg1-device"},"Send code to BG1 device"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Bg1Control control = iHealthDevicesManager.getInstance().getBg1Control(mDeviceMac);\ncontrol.sendCode(String QRCode, int stripType, int measureType)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Return value\nBroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) { \n        String action = intent.getAction();\n        if (action.equals(Bg1Profile.ACTION_BG1_SENDCODE_RESULT)) {\n            int flag = intent.getIntExtra(Bg1Profile.BG1_SENDCODE_RESULT, -1);\n            Log.i( "sendCode flag = " + flag);\n            if (flag == 0) {\n                Log.i("sendCode success,ready to measure");\n            } else {\n                Log.i("sendCode failed");\n                mBg1Control.disconnect();\n            }\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"notify-a-measurement"},"Notify a measurement"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Return value\nBroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) { \n        String action = intent.getAction();\n        if (action.equals(Bg1Profile.ACTION_BG1_MEASURE_STRIP_IN)) {\n            Log.i( "test strip in");\n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_MEASURE_GET_BLOOD)) {\n            Log.i( "drop blood");\n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_MEASURE_RESULT)) {\n           try {\n                JSONObject obj = new JSONObject(message);\n                int value = obj.getInt(Bg1Profile.BG1_MEASURE_RESULT);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_MEASURE_ERROR)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int error_id = obj.getInt(Bg1Profile.BG1_MEASURE_ERROR);\n                String error_message = obj.getInt(Bg1Profile.BG1_MEASURE_ERROR_DESCRIPTION);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n\n        } else if (action.equals(Bg1Profile.ACTION_BG1_MEASURE_STRIP_OUT)) {\n            Log.i( "test strip out");\n        }\n    }\n}\n')))}f.isMDXComponent=!0},7974:function(e,n,t){n.Z=t.p+"assets/images/bg1_connection_workflow_android-8dd1678a54d3d7f0d6e3d3265bcc4bf1.png"}}]);