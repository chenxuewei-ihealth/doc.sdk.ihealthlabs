"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6607],{3905:function(e,t,n){n.d(t,{Zo:function(){return g},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},g=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},v={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=i,p=d["".concat(o,".").concat(u)]||d[u]||v[u]||r;return n?a.createElement(p,c(c({ref:t},g),{},{components:n})):a.createElement(p,c({ref:t},g))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,c[1]=l;for(var s=2;s<r;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4053:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return v}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),c=["components"],l={title:"BG5",sidebar_position:3},o=void 0,s={unversionedId:"android/blood_glucose/bg5",id:"android/blood_glucose/bg5",title:"BG5",description:"WorkFlow",source:"@site/docs/android/blood_glucose/bg5.md",sourceDirName:"android/blood_glucose",slug:"/android/blood_glucose/bg5",permalink:"/ihealthlabs-sdk-docs/docs/android/blood_glucose/bg5",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/android/blood_glucose/bg5.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"BG5",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"BG1S",permalink:"/ihealthlabs-sdk-docs/docs/android/blood_glucose/bg1s"},next:{title:"BG5S",permalink:"/ihealthlabs-sdk-docs/docs/android/blood_glucose/bg5s"}},g={},v=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for BG5 devices",id:"2scan-for-bg5-devices",level:3},{value:"3.Connect to BG5 devices",id:"3connect-to-bg5-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Keep in connection",id:"keep-in-connection",level:3},{value:"Set time to BG5 device",id:"set-time-to-bg5-device",level:3},{value:"Set unit to Bg5 device",id:"set-unit-to-bg5-device",level:3},{value:"Get the Bg5 battery status",id:"get-the-bg5-battery-status",level:3},{value:"Start On-line measurement",id:"start-on-line-measurement",level:3},{value:"Get historical data",id:"get-historical-data",level:3},{value:"Delete historical data",id:"delete-historical-data",level:3},{value:"Set bottle info to Bg5 device",id:"set-bottle-info-to-bg5-device",level:3},{value:"Send bottleId to current BG5 device",id:"send-bottleid-to-current-bg5-device",level:3},{value:"Get bottleId from current BG5 device",id:"get-bottleid-from-current-bg5-device",level:3},{value:"Parse bottle Info of the QRCode",id:"parse-bottle-info-of-the-qrcode",level:3}],d={toc:v};function u(e){var t=e.components,n=(0,i.Z)(e,c);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"workflow"},"WorkFlow"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Scan and connect BG5 blood pressure monitor.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"BG5 only support online measurement."))),(0,r.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,r.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    \n    @Override\n    public void onScanDevice(String mac, String deviceType, int rssi, Map manufactorData) { }\n\n    @Override\n    public void onDeviceConnectionStateChange(String mac, String deviceType, int status, int errorID, Map manufactorData){ }\n\n    @Override\n    public void onScanError(String reason, long latency) { }\n\n    @Override\n    public void onScanFinish() { }\n\n    @Override\n    public void onDeviceNotify(String mac, String deviceType,\n                                String action, String message) { }\n}\nint callbackId = iHealthDevicesManager.getInstance().registerClientCallback(miHealthDevicesCallback);\niHealthDevicesManager.getInstance().addCallbackFilterForDeviceType(callbackId, iHealthDevicesManager.TYPE_BG5);\niHealthDevicesManager.getInstance().addCallbackFilterForAddress(callbackId, String... macs)\n")),(0,r.kt)("h3",{id:"2scan-for-bg5-devices"},"2.Scan for BG5 devices"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"iHealthDevicesManager.getInstance().startDiscovery(DiscoveryTypeEnum.BG5);\n")),(0,r.kt)("h3",{id:"3connect-to-bg5-devices"},"3.Connect to BG5 devices"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'iHealthDevicesManager.getInstance().connectDevice("", mac, iHealthDevicesManager.TYPE_BG5)\n\nBg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\n')),(0,r.kt)("h2",{id:"api-reference"},"API reference"),(0,r.kt)("h3",{id:"keep-in-connection"},"Keep in connection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.holdLink();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Bg5Profile.ACTION_KEEP_LINK.equals(action)) {\n            \n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"set-time-to-bg5-device"},"Set time to BG5 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.startMeasure();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Bg5Profile.ACTION_SET_TIME.equals(action)) {\n           \n        } \n    } \n}\n")),(0,r.kt)("h3",{id:"set-unit-to-bg5-device"},"Set unit to Bg5 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.setUnit(int type);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Bg5Profile.ACTION_SET_UNIT.equals(action)) {\n            \n        } \n    } \n}\n")),(0,r.kt)("h3",{id:"get-the-bg5-battery-status"},"Get the Bg5 battery status"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.getBattery();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Bg5Profile.ACTION_BATTERY_BG.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } \n    } \n}\n")),(0,r.kt)("h3",{id:"start-on-line-measurement"},"Start On-line measurement"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\n/**\n * @param type 1: test with blood; \n *             2: test with control liquid <br/>\n *             <b>Range:</b> 1, 2\n */\ncontrol.startMeasure(int type);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (Bg5Profile.ACTION_BATTERY_BG.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        } \n    } \n}\n")),(0,r.kt)("h3",{id:"get-historical-data"},"Get historical data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.getDeviceInfo();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"delete-historical-data"},"Delete historical data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.getDeviceInfo();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"set-bottle-info-to-bg5-device"},"Set bottle info to Bg5 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.setBottleMessageWithInfo(int stripType, int measureType, String QRCode, int stripNum, String overDate);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"send-bottleid-to-current-bg5-device"},"Send bottleId to current BG5 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.setBottleMessageWithInfo(int stripType, int measureType, String QRCode, int stripNum, String overDate);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"get-bottleid-from-current-bg5-device"},"Get bottleId from current BG5 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control control = iHealthDevicesManager.getInstance().getBg5Control(mDeviceMac);\ncontrol.setBottleMessageWithInfo(int stripType, int measureType, String QRCode, int stripNum, String overDate);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")),(0,r.kt)("h3",{id:"parse-bottle-info-of-the-qrcode"},"Parse bottle Info of the QRCode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Bg5Control.getBottleInfoFromQR(String QRCode);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Return value\nprivate iHealthDevicesCallback miHealthDevicesCallback = new iHealthDevicesCallback() {\n    @Override\n    public void onDeviceNotify(String mac, String deviceType, String action, String message) {\n        if (BpProfile.ACTION_INTERRUPTED_BP.equals(action)) {\n            try {\n                JSONObject obj = new JSONObject(message);\n                int battery = obj.getInt((Bg5Profile.BATTERY_BG);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n    } \n}\n")))}u.isMDXComponent=!0}}]);