"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7357],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},P=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),P=d(n),p=r,f=P["".concat(s,".").concat(p)]||P[p]||u[p]||l;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=P;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var d=2;d<l;d++)a[d]=n[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}P.displayName="MDXCreateElement"},9802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const l={title:"PO3",sidebar_position:2},a=void 0,i={unversionedId:"react-native/blood_oxygen/po3",id:"react-native/blood_oxygen/po3",title:"PO3",description:"API Reference",source:"@site/docs/react-native/blood_oxygen/po3.md",sourceDirName:"react-native/blood_oxygen",slug:"/react-native/blood_oxygen/po3",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_oxygen/po3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/blood_oxygen/po3.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"PO3",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"PO1",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_oxygen/po1"},next:{title:"NT13B",permalink:"/ihealthlabs-sdk-docs/docs/react-native/thermometer/nt13b"}},s={},d=[{value:"API Reference",id:"api-reference",level:2},{value:"Import PO3 Module",id:"import-po3-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"get battery",id:"get-battery",level:3},{value:"start a measurement with app",id:"start-a-measurement-with-app",level:3},{value:"get data stored in the po3 device",id:"get-data-stored-in-the-po3-device",level:3}],c={toc:d};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"import-po3-module"},"Import PO3 Module"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  PO3Module,\n  POProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,r.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,r.kt)("h3",{id:"get-battery"},"get battery"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.getBattery(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_BATTERY_PO) {\n        console.log(event[POProfileModule.BATTERY_PO]);\n    }\n});\n")),(0,r.kt)("h3",{id:"start-a-measurement-with-app"},"start a measurement with app"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.startMeasure(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_LIVEDA_PO) {\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    } else if(){\n        // final result\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    }\n});\n")),(0,r.kt)("h3",{id:"get-data-stored-in-the-po3-device"},"get data stored in the po3 device"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'PO3Module.getHistoryData(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_NO_OFFLINEDATA_PO) {\n        console.log("There is no more data stored in the po3 device.");\n    } else if (event.action === POProfileModule.ACTION_OFFLINEDATA_PO) {\n        const dataArray = event[POProfileModule.OFFLINEDATA_PO];\n        for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n                console.log(offlineData[POProfileModule.MEASUREMENT_DATE_BP]);\n                console.log(offlineData[POProfileModule.HIGH_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.LOW_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.PULSE_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_AHR_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_HSD_BP]);\n                console.log(offlineData[POProfileModule.DATAID]);\n            }\n    }\n});\n')))}u.isMDXComponent=!0}}]);