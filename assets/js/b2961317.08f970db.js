"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[654],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return g}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(a),g=r,v=p["".concat(o,".").concat(g)]||p[g]||s[g]||c;return a?n.createElement(v,l(l({ref:t},u),{},{components:a})):n.createElement(v,l({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,l=new Array(c);l[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<c;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7055:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return s}});var n=a(7462),r=a(3366),c=(a(7294),a(3905)),l=["components"],i={title:"ECG3USB",sidebar_position:2},o=void 0,d={unversionedId:"react-native/ecg/ecgusb",id:"react-native/ecg/ecgusb",title:"ECG3USB",description:"API Reference",source:"@site/docs/react-native/ecg/ecgusb.md",sourceDirName:"react-native/ecg",slug:"/react-native/ecg/ecgusb",permalink:"/ihealthlabs-sdk-docs/docs/react-native/ecg/ecgusb",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/ecg/ecgusb.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"ECG3USB",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"ECG3",permalink:"/ihealthlabs-sdk-docs/docs/react-native/ecg/"}},u={},s=[{value:"API Reference",id:"api-reference",level:2},{value:"Import ECG3 module",id:"import-ecg3-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"get device information",id:"get-device-information",level:3},{value:"get all connected devices",id:"get-all-connected-devices",level:3},{value:"get data stored in the ecg3 device",id:"get-data-stored-in-the-ecg3-device",level:3},{value:"delete data stored in the ecg3 device",id:"delete-data-stored-in-the-ecg3-device",level:3},{value:"splice data",id:"splice-data",level:3},{value:"get cache",id:"get-cache",level:3},{value:"delete cache data",id:"delete-cache-data",level:3},{value:"get filter data",id:"get-filter-data",level:3}],p={toc:s};function g(e){var t=e.components,a=(0,r.Z)(e,l);return(0,c.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"api-reference"},"API Reference"),(0,c.kt)("h3",{id:"import-ecg3-module"},"Import ECG3 module"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ECGModule,\n  ECGProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,c.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(ECGModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,c.kt)("h3",{id:"get-device-information"},"get device information"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getIdps()\n")),(0,c.kt)("h3",{id:"get-all-connected-devices"},"get all connected devices"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getAllConnectedDevices();\n")),(0,c.kt)("h3",{id:"get-data-stored-in-the-ecg3-device"},"get data stored in the ecg3 device"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.syncData();\n")),(0,c.kt)("h3",{id:"delete-data-stored-in-the-ecg3-device"},"delete data stored in the ecg3 device"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.deleteData();\n")),(0,c.kt)("h3",{id:"splice-data"},"splice data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'ECGUSBModule.spliceData(["ECGSDK_20160420025256",\n                         "ECGSDK_20160420025453",\n                         "ECGSDK_20160420030824",\n                         "ECGSDK_20160420082435"]);\n')),(0,c.kt)("h3",{id:"get-cache"},"get cache"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getCache();\n")),(0,c.kt)("h3",{id:"delete-cache-data"},"delete cache data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.deleteCacheData();\n")),(0,c.kt)("h3",{id:"get-filter-data"},"get filter data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'ECGUSBModule.getFilterDataByFileName("ECG_Total_Data_20160420025256.dat","ECG_Total_Mark_20160420025256.txt");\n')))}g.isMDXComponent=!0}}]);