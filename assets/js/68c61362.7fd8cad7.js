"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4568],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=s(n),v=o,m=u["".concat(i,".").concat(v)]||u[v]||p[v]||c;return n?r.createElement(m,l(l({ref:t},d),{},{components:n})):r.createElement(m,l({ref:t},d))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,l=new Array(c);l[0]=u;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<c;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2504:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const c={title:"TS28B",sidebar_position:2},l=void 0,a={unversionedId:"ios/thermometer/ts28b",id:"ios/thermometer/ts28b",title:"TS28B",description:"WorkFlow",source:"@site/docs/ios/thermometer/ts28b.md",sourceDirName:"ios/thermometer",slug:"/ios/thermometer/ts28b",permalink:"/ihealthlabs-sdk-docs/docs/ios/thermometer/ts28b",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/thermometer/ts28b.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"TS28B",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"NT13B",permalink:"/ihealthlabs-sdk-docs/docs/ios/thermometer/nt13b"},next:{title:"PT3SBT",permalink:"/ihealthlabs-sdk-docs/docs/ios/thermometer/pt3sbt"}},i={},s=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for TS28B devices",id:"2scan-for-ts28b-devices",level:3},{value:"2.Stop Scan for TS28B devices",id:"2stop-scan-for-ts28b-devices",level:3},{value:"3.Connect to TS28B devices",id:"3connect-to-ts28b-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Measure",id:"measure",level:3},{value:"Disconnect",id:"disconnect",level:3}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"workflow"},"WorkFlow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Scan and connect TS28B.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"TS28B support online measurement."))),(0,o.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,o.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"\n<TS28BControllerDelegate>\n\n    \n")),(0,o.kt)("h3",{id:"2scan-for-ts28b-devices"},"2.Scan for TS28B devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"TS28BController *controller= [TS28BController sharedController];\n\n    self.controller.delegate=self;\n    \n    [self.controller startScan];\n")),(0,o.kt)("h3",{id:"2stop-scan-for-ts28b-devices"},"2.Stop Scan for TS28B devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"TS28BController *controller= [TS28BController sharedController];\n\n    \n    [self.controller stopScan];\n")),(0,o.kt)("h3",{id:"3connect-to-ts28b-devices"},"3.Connect to TS28B devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"- (void)controller:(TS28BController *)controller didDiscoverDevice:(TS28B *)device{\n   \n    self.connectedDevice=device;\n    \n     [self.controller connectDevice:self.connectedDevice];\n    \n   \n}\n- (void)controller:(TS28BController *)controller didConnectSuccessDevice:(TS28B *)device{\n  \n\n}\n- (void)controller:(TS28BController *)controller didConnectFailDevice:(TS28B *)device{\n   \n}\n- (void)controller:(TS28BController *)controller didDisconnectDevice:(TS28B *)device{\n   \n}\n")),(0,o.kt)("h2",{id:"api-reference"},"API reference"),(0,o.kt)("h3",{id:"measure"},"Measure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"\n- (void)controller:(TS28BController *)controller device:(TS28B *)device didUpdateTemperature:(float)value temperatureUnit:(TemperatureUnit)unit measureDate:(NSDate *)date measureLocation:(TemperatureType)type{\n    \n    \n    \n}\n")),(0,o.kt)("h3",{id:"disconnect"},"Disconnect"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n DisConnect with spectific device\n\n @param device TS28B object. You can get it from - (void)controller:(TS28BController *)controller didConnectSuccessDevice:(TS28B *)device;\n */\n- (void)disconnectDevice:(TS28B *)device;\n")))}p.isMDXComponent=!0}}]);