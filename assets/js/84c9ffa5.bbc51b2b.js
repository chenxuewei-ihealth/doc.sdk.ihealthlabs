"use strict";(self.webpackChunksdk_docs=self.webpackChunksdk_docs||[]).push([[7309],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return P}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),c=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),f=c(t),P=r,p=f["".concat(d,".").concat(P)]||f[P]||u[P]||l;return t?o.createElement(p,i(i({ref:n},s),{},{components:t})):o.createElement(p,i({ref:n},s))}));function P(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=f;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var c=2;c<l;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},90176:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var o=t(87462),r=t(63366),l=(t(67294),t(3905)),i=["components"],a={title:"PO3",sidebar_position:2},d=void 0,c={unversionedId:"blood_oxygen/po3",id:"version-1.4.9/blood_oxygen/po3",isDocsHomePage:!1,title:"PO3",description:"API Reference",source:"@site/react-native_versioned_docs/version-1.4.9/blood_oxygen/po3.md",sourceDirName:"blood_oxygen",slug:"/blood_oxygen/po3",permalink:"/ihealthlabs-sdk-docs/react-native/blood_oxygen/po3",editUrl:"https://github.com/chenxuewei-ihealth/ihealthlabs-sdk-docs/tree/main/react-native_versioned_docs/version-1.4.9/blood_oxygen/po3.md",tags:[],version:"1.4.9",sidebarPosition:2,frontMatter:{title:"PO3",sidebar_position:2},sidebar:"version-0.23.x/mainSidebar",previous:{title:"PO1",permalink:"/ihealthlabs-sdk-docs/react-native/blood_oxygen/po1"},next:{title:"NT13B",permalink:"/ihealthlabs-sdk-docs/react-native/thermometer/nt13b"}},s=[{value:"API Reference",id:"api-reference",children:[{value:"Import PO3 Module",id:"import-po3-module",children:[]},{value:"Add and remove listener",id:"add-and-remove-listener",children:[]},{value:"get battery",id:"get-battery",children:[]},{value:"start a measurement with app",id:"start-a-measurement-with-app",children:[]},{value:"get data stored in the po3 device",id:"get-data-stored-in-the-po3-device",children:[]}]}],u={toc:s};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"api-reference"},"API Reference"),(0,l.kt)("h3",{id:"import-po3-module"},"Import PO3 Module"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  PO3Module,\n  POProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,l.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,l.kt)("h3",{id:"get-battery"},"get battery"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.getBattery(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_BATTERY_PO) {\n        console.log(event[POProfileModule.BATTERY_PO]);\n    }\n});\n")),(0,l.kt)("h3",{id:"start-a-measurement-with-app"},"start a measurement with app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.startMeasure(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_LIVEDA_PO) {\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    } else if(){\n        // final result\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    }\n});\n")),(0,l.kt)("h3",{id:"get-data-stored-in-the-po3-device"},"get data stored in the po3 device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'PO3Module.getHistoryData(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_NO_OFFLINEDATA_PO) {\n        console.log("There is no more data stored in the po3 device.");\n    } else if (event.action === POProfileModule.ACTION_OFFLINEDATA_PO) {\n        const dataArray = event[POProfileModule.OFFLINEDATA_PO];\n        for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n                console.log(offlineData[POProfileModule.MEASUREMENT_DATE_BP]);\n                console.log(offlineData[POProfileModule.HIGH_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.LOW_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.PULSE_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_AHR_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_HSD_BP]);\n                console.log(offlineData[POProfileModule.DATAID]);\n            }\n    }\n});\n')))}f.isMDXComponent=!0}}]);