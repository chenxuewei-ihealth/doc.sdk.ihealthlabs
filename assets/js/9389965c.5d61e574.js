"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2141],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return v}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),f=s(n),v=o,p=f["".concat(c,".").concat(v)]||f[v]||u[v]||a;return n?r.createElement(p,l(l({ref:t},d),{},{components:n})):r.createElement(p,l({ref:t},d))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3140:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={title:"HS4",sidebar_position:3},c=void 0,s={unversionedId:"react-native/scale/hs4",id:"react-native/scale/hs4",title:"HS4",description:"API Reference",source:"@site/docs/react-native/scale/hs4.md",sourceDirName:"react-native/scale",slug:"/react-native/scale/hs4",permalink:"/ihealthlabs-sdk-docs/docs/react-native/scale/hs4",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/scale/hs4.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"HS4",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"HS2S",permalink:"/ihealthlabs-sdk-docs/docs/react-native/scale/hs2s"},next:{title:"HS4S",permalink:"/ihealthlabs-sdk-docs/docs/react-native/scale/hs4s"}},d={},u=[{value:"API Reference",id:"api-reference",level:2},{value:"Import HS4S module",id:"import-hs4s-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"start a measurement",id:"start-a-measurement",level:3},{value:"get data stored in the HS4S device",id:"get-data-stored-in-the-hs4s-device",level:3},{value:"disconnect device",id:"disconnect-device",level:3},{value:"get all connected devices",id:"get-all-connected-devices",level:3}],f={toc:u};function v(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"api-reference"},"API Reference"),(0,a.kt)("h3",{id:"import-hs4s-module"},"Import HS4S module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  HS4SModule,\n  HSProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,a.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(HS4SModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,a.kt)("h3",{id:"start-a-measurement"},"start a measurement"),(0,a.kt)("p",null,"The API is asyn function. It will return message until finish measurement."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"HS4SModule.startMeasure(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(HS4SModule.Event_Notify,  (event) => {\n    if (event.action === HSProfileModule.ACTION_ONLINE_RESULT_HS) {\n        console.log(event[HSProfileModule.DATAID]);\n        console.log(event[HSProfileModule.WEIGHT_HS]);\n        console.log(event[HSProfileModule.FAT_HS]);\n        console.log(event[HSProfileModule.WATER_HS]);\n        console.log(event[HSProfileModule.MUSCLE_HS]);\n        console.log(event[HSProfileModule.SKELETON_HS]);\n        console.log(event[HSProfileModule.FATELEVEL_HS]);\n        console.log(event[HSProfileModule.DCI_HS]);\n    }\n});\n")),(0,a.kt)("h3",{id:"get-data-stored-in-the-hs4s-device"},"get data stored in the HS4S device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'HS4SModule.getOfflineData(mac);\n\nnotifyListener = DeviceEventEmitter.addListener(HS4SModule.Event_Notify,  (event) => {\n    if (event.action === HSProfileModule.ACTION_HISTORICAL_DATA_HS) {\n        let dataArray = event[HSProfileModule.HISTORDATA_HS];\n        if (dataArray == undefined) {\n            result = "There is not offline data in device"\n        }else {\n            for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n                console.log(offlineData[HSProfileModule.MEASUREMENT_DATE_HS]);\n                console.log(offlineData[HSProfileModule.WEIGHT_HS]);\n                console.log(offlineData[HSProfileModule.FAT_HS]);\n                console.log(offlineData[HSProfileModule.WATER_HS]);\n                console.log(offlineData[HSProfileModule.MUSCLE_HS]);\n                console.log(offlineData[HSProfileModule.SKELETON_HS]);\n                console.log(offlineData[HSProfileModule.FATELEVEL_HS]);\n                console.log(offlineData[HSProfileModule.DATAID]);\n            }\n        }\n    }\n});\n')),(0,a.kt)("h3",{id:"disconnect-device"},"disconnect device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"HS4SModule.disConnect(mac);\n")),(0,a.kt)("h3",{id:"get-all-connected-devices"},"get all connected devices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"HS4SModule.getAllConnectedDevices();\n")))}v.isMDXComponent=!0}}]);