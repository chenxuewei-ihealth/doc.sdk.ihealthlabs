"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3441],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,f=m["".concat(c,".").concat(u)]||m[u]||p[u]||a;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"HS2",sidebar_position:1},i=void 0,s={unversionedId:"ios/scale/hs2",id:"ios/scale/hs2",title:"HS2",description:"WorkFlow",source:"@site/docs/ios/scale/hs2.md",sourceDirName:"ios/scale",slug:"/ios/scale/hs2",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ios/scale/hs2.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"HS2",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"KN926",permalink:"/ihealthlabs-sdk-docs/docs/ios/blood_pressure/kd926"},next:{title:"HS2S",permalink:"/ihealthlabs-sdk-docs/docs/ios/scale/hs2s"}},c={},l=[{value:"WorkFlow",id:"workflow",level:2},{value:"Connection to device",id:"connection-to-device",level:2},{value:"1.Listen to device notify",id:"1listen-to-device-notify",level:3},{value:"2.Scan for HS2 devices",id:"2scan-for-hs2-devices",level:3},{value:"3.Connect to HS2 devices",id:"3connect-to-hs2-devices",level:3},{value:"API reference",id:"api-reference",level:2},{value:"Get the battery info",id:"get-the-battery-info",level:3},{value:"Get offline data",id:"get-offline-data",level:3},{value:"Specify Online Users",id:"specify-online-users",level:3},{value:"Disconnect the HS2",id:"disconnect-the-hs2",level:3}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"workflow"},"WorkFlow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Scan and connect HS2 scale.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"HS2 support online measurement and offline measurement."))),(0,o.kt)("h2",{id:"connection-to-device"},"Connection to device"),(0,o.kt)("h3",{id:"1listen-to-device-notify"},"1.Listen to device notify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDiscover:) name:HS2Discover object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnectFail:) name:HS2ConnectFailed object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceConnect:) name:HS2ConnectNoti object:nil];\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(DeviceDisConnect:) name:HS2DisConnectNoti object:nil];\n\n[HS2Controller shareIHHs2Controller];\n")),(0,o.kt)("h3",{id:"2scan-for-hs2-devices"},"2.Scan for HS2 devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ScanDeviceController commandGetInstance] commandScanDeviceType:HealthDeviceType_HS2];\n")),(0,o.kt)("h3",{id:"3connect-to-hs2-devices"},"3.Connect to HS2 devices"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"[[ConnectDeviceController commandGetInstance] commandContectDeviceWithDeviceType:HealthDeviceType_HS2 andSerialNub:deviceMac];\n")),(0,o.kt)("h2",{id:"api-reference"},"API reference"),(0,o.kt)("h3",{id:"get-the-battery-info"},"Get the battery info"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *Get HS2 Battery\n\n * @param HS2battery HS2battery [Range:0\uff5e100]%\n * @param disposeErrorBlock error code\n */\n-(void)commandGetHS2Battery:(DisposeHS2BatteryBlock)HS2battery DiaposeErrorBlock:(DisposeHS2ErrorBlock)disposeErrorBlock;\n")),(0,o.kt)("h3",{id:"get-offline-data"},"Get offline data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Upload memory data\n \n * Return parameters:\n * @param  startTransmission -Start Memory transmission.\n * @param  progress         -Memory transmission progress\uff0c[Range:0.0\uff5e1.0].\n * @param  memorryData      -Record data including weight (kg), measurement time\uff0ccoordinated key\uff1aweight\uff0cdate.[Range of weight 0~180(kg)] \uff08If it exceeds 180kg, it will display er1 error, but the SDK interface will also return data. More than 180kg of data is not recommended.\uff09\n * @param  finishTransmission -Finish memory transmission.\n * @param  disposeErrorBlock  -Record the error code in uploading process.\n * Error code definition: refer to \u201derror\u201d : HS2 error instruction.\n */\n\n-(void)commandHS2TransferMemorryData:(StartHS2Transmission)startTransmission DisposeProgress:(DisposeProgress)progress MemorryData:(MemorryData)memorryData FinishTransmission:(FinishHS2Transmission)finishTransmission DisposeErrorBlock:(DisposeHS2ErrorBlock)disposeErrorBlock;\n")),(0,o.kt)("h3",{id:"specify-online-users"},"Specify Online Users"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n \n * Establish memory and measurement connection\n \n * Import parameter:\n * @param tempUnit  -Unit displayed on HS2: HSUnit_Kg\u3001HSUnit_LB\u3001HSUnit_ST\u3002\n \n * Return parameters:\n The measurement via SDK will be operated in the case of 1-4, and will be terminated if any of 5-8 occurs. The interface needs to be re-called after analyzing the return parameters.\n \n * @param unStableWeight     - Current weight, (Kg) [Value Range:0~180]\n * @param stableWeight       - Stable weight, (Kg) [Value Range:0~180]\n * @param disposeErrorBlock  - error code\n * Error code definition\uff1a\n *  refer to \u201cerror\u201d : HS2 error instruction.\n */\n\n-(void)commandHS2MeasureWithUint:(HSUnit)tempUnit Weight:(UnStableWeight)unStableWeight StableWeight:(StableWeight)stableWeight DisposeErrorBlock:(DisposeHS2ErrorBlock)disposeErrorBlock;\n")),(0,o.kt)("h3",{id:"disconnect-the-hs2"},"Disconnect the HS2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n Disconnect current device\n */\n\n-(void)commandDisconnectDevice;\n")))}p.isMDXComponent=!0}}]);