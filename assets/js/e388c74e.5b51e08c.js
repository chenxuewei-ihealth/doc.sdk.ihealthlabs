"use strict";(self.webpackChunksdk_docs=self.webpackChunksdk_docs||[]).push([[2250],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=l(n),g=a,m=p["".concat(d,".").concat(g)]||p[g]||u[g]||c;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},31487:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return d},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s}});var r=n(87462),a=n(63366),c=(n(67294),n(3905)),i=["components"],o={title:"ECG3USB",sidebar_position:2},d=void 0,l={unversionedId:"ecg/ecgusb",id:"version-1.4.9/ecg/ecgusb",isDocsHomePage:!1,title:"ECG3USB",description:"API Reference",source:"@site/react-native_versioned_docs/version-1.4.9/ecg/ecgusb.md",sourceDirName:"ecg",slug:"/ecg/ecgusb",permalink:"/doc.sdk.ihealthlabs/react-native/ecg/ecgusb",editUrl:"https://github.com/dyte-in/docs/tree/main/react-native_versioned_docs/version-1.4.9/ecg/ecgusb.md",tags:[],version:"1.4.9",sidebarPosition:2,frontMatter:{title:"ECG3USB",sidebar_position:2},sidebar:"version-0.23.x/mainSidebar",previous:{title:"ECG3",permalink:"/doc.sdk.ihealthlabs/react-native/ecg/ecg"}},s=[{value:"API Reference",id:"api-reference",children:[{value:"Import ECG3 module",id:"import-ecg3-module",children:[]},{value:"Add and remove listener",id:"add-and-remove-listener",children:[]},{value:"get device information",id:"get-device-information",children:[]},{value:"get all connected devices",id:"get-all-connected-devices",children:[]},{value:"get data stored in the ecg3 device",id:"get-data-stored-in-the-ecg3-device",children:[]},{value:"delete data stored in the ecg3 device",id:"delete-data-stored-in-the-ecg3-device",children:[]},{value:"splice data",id:"splice-data",children:[]},{value:"get cache",id:"get-cache",children:[]},{value:"delete cache data",id:"delete-cache-data",children:[]},{value:"get filter data",id:"get-filter-data",children:[]}]}],u={toc:s};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"api-reference"},"API Reference"),(0,c.kt)("h3",{id:"import-ecg3-module"},"Import ECG3 module"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ECGModule,\n  ECGProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,c.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(ECGModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,c.kt)("h3",{id:"get-device-information"},"get device information"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getIdps()\n")),(0,c.kt)("h3",{id:"get-all-connected-devices"},"get all connected devices"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getAllConnectedDevices();\n")),(0,c.kt)("h3",{id:"get-data-stored-in-the-ecg3-device"},"get data stored in the ecg3 device"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.syncData();\n")),(0,c.kt)("h3",{id:"delete-data-stored-in-the-ecg3-device"},"delete data stored in the ecg3 device"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.deleteData();\n")),(0,c.kt)("h3",{id:"splice-data"},"splice data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'ECGUSBModule.spliceData(["ECGSDK_20160420025256",\n                         "ECGSDK_20160420025453",\n                         "ECGSDK_20160420030824",\n                         "ECGSDK_20160420082435"]);\n')),(0,c.kt)("h3",{id:"get-cache"},"get cache"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.getCache();\n")),(0,c.kt)("h3",{id:"delete-cache-data"},"delete cache data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"ECGUSBModule.deleteCacheData();\n")),(0,c.kt)("h3",{id:"get-filter-data"},"get filter data"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'ECGUSBModule.getFilterDataByFileName("ECG_Total_Data_20160420025256.dat","ECG_Total_Mark_20160420025256.txt");\n')))}p.isMDXComponent=!0}}]);