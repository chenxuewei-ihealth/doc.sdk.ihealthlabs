"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6635],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,v=m["".concat(s,".").concat(p)]||m[p]||u[p]||r;return n?o.createElement(v,i(i({ref:t},d),{},{components:n})):o.createElement(v,i({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={title:"BG1A",sidebar_position:5},i=void 0,l={unversionedId:"react-native/blood_glucose/bg1a",id:"react-native/blood_glucose/bg1a",title:"BG1A",description:"1. BG1A is a low-power Bluetooth glucose meter with indicator lights, but without a screen or buttons.",source:"@site/docs/react-native/blood_glucose/bg1a.mdx",sourceDirName:"react-native/blood_glucose",slug:"/react-native/blood_glucose/bg1a",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_glucose/bg1a",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/blood_glucose/bg1a.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"BG1A",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"BG5S",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_glucose/bg5s"},next:{title:"PO1",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_oxygen/po1"}},s={},c=[{value:"API Reference",id:"api-reference",level:2},{value:"Import BG1A module",id:"import-bg1a-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"Get All connected BG1A devices",id:"get-all-connected-bg1a-devices",level:3},{value:"Get BG1A IDPS information",id:"get-bg1a-idps-information",level:3},{value:"Get BG1A battery level",id:"get-bg1a-battery-level",level:3},{value:"Set BG1A measurement mode",id:"set-bg1a-measurement-mode",level:3},{value:"Start a measurement",id:"start-a-measurement",level:3}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol"},"BG1A is a low-power Bluetooth glucose meter with indicator lights, but without a screen or buttons."),(0,a.kt)("li",{parentName:"ol"},"The BG1A is only turned on by inserting test strip."),(0,a.kt)("li",{parentName:"ol"},"BG1A only support online measurement."),(0,a.kt)("li",{parentName:"ol"},"Once the device is turned on, it begins Bluetooth broadcasting and can be scanned and connected to by the app."),(0,a.kt)("li",{parentName:"ol"},"After blood glucose measurement is completed, or the test strip is removed, the device will shut down and Bluetooth will also disconnect.")))),(0,a.kt)("h2",{id:"api-reference"},"API Reference"),(0,a.kt)("h3",{id:"import-bg1a-module"},"Import BG1A module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  BG1AModule,\n  BG1AProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,a.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,a.kt)("h3",{id:"get-all-connected-bg1a-devices"},"Get All connected BG1A devices"),(0,a.kt)("p",null,"Return all connected devices."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'BG1AModule.getAllConnectedDevices()\n\n// Response\nconst notifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    if (event.action === BG1AProfileModule.ACTION_GET_ALL_CONNECTED_DEVICES) {\n        // Example: {"action":"action_get_all_connected_devices","devices":["004D32DDC704"]}\n        console.log(event);\n    }\n});\n')),(0,a.kt)("h3",{id:"get-bg1a-idps-information"},"Get BG1A IDPS information"),(0,a.kt)("p",null,"Return BG1A IDPS information"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'BG1AModule.getIDPS(mac);\n\n// Response\nconst notifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    if (event.action === BG1AProfileModule.ACTION_INFO_IDPS) {\n        // Example: {"serialnumber":"","manufacture":"iHealth","modenumber":"BG1A 11070","hardwareversion":"3.0.0","firmwareversion":"1.0.0","accessoryname":"BG1A","protocolstring":"com.jiuan.BGV44","action":"action_info_idps","type":"BG1A","mac":"004D32DDC704"}\n        console.log(event);\n    }\n});\n')),(0,a.kt)("h3",{id:"get-bg1a-battery-level"},"Get BG1A battery level"),(0,a.kt)("p",null,"Return BG1A battery level"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"BG1AModule.getBattery(mac);\n\n// response\nconst notifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    if (event.action === BG1AProfileModule.ACTION_BATTERY_BG1A) {\n        // Example: {battery: 8, type: 'BG1A', mac: '004D32DDC704', action: 'battery_bg1a'}\n        console.log(event);\n    }\n});\n")),(0,a.kt)("h3",{id:"set-bg1a-measurement-mode"},"Set BG1A measurement mode"),(0,a.kt)("p",null,"Return BG1A battery level"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * mode type\n * 0: Blood mode\n * 1: CTL mode\n * */\nBG1AModule.setMeasureMode(mac, mode);\n\n// response\nconst notifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    if (event.action === BG1AProfileModule.ACTION_BATTERY_BG1A) {\n        // Example: {status: 0, type: 'BG1A', mac: '004D32DDC704', action: 'action_set_measure_mode'}\n        console.log(event);\n    }\n});\n")),(0,a.kt)("h3",{id:"start-a-measurement"},"Start a measurement"),(0,a.kt)("p",null,"BG1A don't have power button, when you insert test strip into moniter, BG1A will open and begin Bluetooth broadcasting.\nWhen BG1A is connected, it will return the strip insertion status.  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// response\nconst notifyListener = DeviceEventEmitter.addListener(BG1AModule.Event_Notify,  (event) => {\n    if (event.action === BG1AProfileModule.ACTION_STRIP_INSERTION_STATUS) {\n        // {"action": "action_strip_insertion_status", "describe": "strip in", "insertion_status": 1, "mac": "004D32DDC704", "type": "BG1A"}\n        console.log("strip in");\n\n    } else if (event.action === BG1AProfileModule.ACTION_GET_BLOOD) {\n        //  {"action": "action_get_blood", "describe": "Blood drop detected", "mac": "004D32DDC704", "type": "BG1A"}\n        console.log("put the blood onto the strip");\n\n    } else if (event.action === BG1AProfileModule.ACTION_MEASURE_RESULT) {\n        // {"action": "action_measure_result", "mac": "004D32DDC704", "measure_result": 0, "type": "BG1A"}\n        console.log(event[BG1AProfileModule.MEASURE_MODE]);\n        console.log(event[BG1AProfileModule.MEASURE_RESULT]);\n    }\n});\n')))}u.isMDXComponent=!0}}]);