"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8309],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=d(n),m=l,v=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return n?o.createElement(v,i(i({ref:t},c),{},{components:n})):o.createElement(v,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=n(7462),l=(n(7294),n(3905));const r={title:"BG5",sidebar_position:3},i=void 0,a={unversionedId:"react-native/blood_glucose/bg5",id:"react-native/blood_glucose/bg5",title:"BG5",description:"API Reference",source:"@site/docs/react-native/blood_glucose/bg5.md",sourceDirName:"react-native/blood_glucose",slug:"/react-native/blood_glucose/bg5",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_glucose/bg5",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-native/blood_glucose/bg5.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"BG5",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"BG1S",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_glucose/bg1s"},next:{title:"BG5S",permalink:"/ihealthlabs-sdk-docs/docs/react-native/blood_glucose/bg5s"}},s={},d=[{value:"API Reference",id:"api-reference",level:2},{value:"Import BG5 Module",id:"import-bg5-module",level:3},{value:"Add and remove listener",id:"add-and-remove-listener",level:3},{value:"set time",id:"set-time",level:3},{value:"set unit",id:"set-unit",level:3},{value:"get bottle information from barcode",id:"get-bottle-information-from-barcode",level:3},{value:"set bottle id",id:"set-bottle-id",level:3},{value:"get bottle id",id:"get-bottle-id",level:3},{value:"Set bottle message",id:"set-bottle-message",level:3},{value:"get bottle message",id:"get-bottle-message",level:3},{value:"start a measurement",id:"start-a-measurement",level:3},{value:"get data stored in the bg5 device",id:"get-data-stored-in-the-bg5-device",level:3},{value:"delete the data stored in the bg5 device",id:"delete-the-data-stored-in-the-bg5-device",level:3},{value:"keep link with phone",id:"keep-link-with-phone",level:3}],c={toc:d};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"api-reference"},"API Reference"),(0,l.kt)("h3",{id:"import-bg5-module"},"Import BG5 Module"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  BG5Module,\n  BGProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,l.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,l.kt)("h3",{id:"set-time"},"set time"),(0,l.kt)("p",null,"If you use new bg5 or it has not been used for a long time. You should sync current time with bg5."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'BG5Module.setTime(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_SET_TIME) {\n        console.log("set time");\n    }\n});\n')),(0,l.kt)("h3",{id:"set-unit"},"set unit"),(0,l.kt)("p",null,"The API can change the unit of the bg5 display."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// 1: mmol/L 2: mg/dL\nBG5Module.setUnit(mac, 1);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_SET_UNIT) {\n        console.log("set unit");\n    }\n});\n')),(0,l.kt)("h3",{id:"get-bottle-information-from-barcode"},"get bottle information from barcode"),(0,l.kt)("p",null,"When you scan the barcode at the top of bottle, you can get a string. Pass the string to this API, you can get bottle id, Number of the strips and expire day."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"BG5Module.getBottleInfoFromQR(QRCode);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_CODE_ANALYSIS) {\n        console.log(event[BGProfileModule.STRIP_NUM_BG]);\n        console.log(event[BGProfileModule.STRIP_EXPIRETIME_BG]);\n        console.log(event[BGProfileModule.BOTTLEID_BG]);\n    }\n});\n")),(0,l.kt)("h3",{id:"set-bottle-id"},"set bottle id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'BG5Module.getBottleInfoFromQR(QRCode);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_SET_BOTTLEID) {\n        console.log("Set bottleID");\n    }\n});\n')),(0,l.kt)("h3",{id:"get-bottle-id"},"get bottle id"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"BG5Module.getBottleInfoFromQR(QRCode);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_GET_BOTTLEID) {\n        console.log(event[BGProfileModule.GET_BOTTLEID]);\n    }\n});\n")),(0,l.kt)("h3",{id:"set-bottle-message"},"Set bottle message"),(0,l.kt)("p",null,"When you use a new bg5 device or you open a new strip bottle, must set bottle message to bg5 device."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * mac         device mac address\n * stripType   1: GOD, 2: GDH\n * measureType 1: measure with real blood, 2: measure with control solution\n * barcode     for GOD strip, you can scan barcode at top of the bottle. for GDH strip, set null.\n * unusedStrip unused strip.\n * expireDay   check the expire day on the bottle, and stirp is expired after opening for 90 days.\n */\nBG5Module.setBottleMessage(mac, 1, 1, QRCode, 25, "2027-07-15");\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_SET_BOTTLEMESSAGE) {\n        console.log("set bottle message success");\n    }\n});\n')),(0,l.kt)("h3",{id:"get-bottle-message"},"get bottle message"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"BG5Module.getBottleMessage(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_GET_BOTTLEMESSAGE) {\n        console.log(event[BGProfileModule.GET_EXPIRECTIME]);\n        console.log(event[BGProfileModule.GET_USENUM]);\n    }\n});\n")),(0,l.kt)("h3",{id:"start-a-measurement"},"start a measurement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// * measureType 1: measure with real blood, 2: measure with control solution\nBG5Module.startMeasure(mac, 1);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_STRIP_IN) {\n        console.log("strip in");\n\n    } else if (event.action === BGProfileModule.ACTION_STRIP_OUT) {\n        console.log("strip out");\n\n    } else if (event.action === BGProfileModule.ACTION_GET_BLOOD) {\n        console.log("analysis blood");\n\n    } else if (event.action === BGProfileModule.ACTION_ONLINE_RESULT_BG) {\n        console.log(event[BGProfileModule.ONLINE_RESULT_BG]);\n        console.log(event[BGProfileModule.DATA_ID]);\n    }\n});\n')),(0,l.kt)("h3",{id:"get-data-stored-in-the-bg5-device"},"get data stored in the bg5 device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"BG5Module.getOfflineData(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_GET_OFFLINEDATA_COUNT) {\n        console.log(event[BGProfileModule.GET_OFFLINEDATA_COUNT]);\n        console.log(event[BGProfileModule.GET_OFFLINEDATA]);\n    }\n});\n")),(0,l.kt)("h3",{id:"delete-the-data-stored-in-the-bg5-device"},"delete the data stored in the bg5 device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'BG5Module.deleteOfflineData(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(BG5Module.Event_Notify,  (event) => {\n    if (event.action === BGProfileModule.ACTION_DELETE_OFFLINEDATA) {\n        console.log("delete data");\n    }\n});\n')),(0,l.kt)("h3",{id:"keep-link-with-phone"},"keep link with phone"),(0,l.kt)("p",null,"The BG5 use regular bluetooth communicate with phone. For save the power, if there is no communication, bg5 will turn off.\nThe api is used to keep link with phone."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"BG5Module.holdLink(mac);\n")))}u.isMDXComponent=!0}}]);