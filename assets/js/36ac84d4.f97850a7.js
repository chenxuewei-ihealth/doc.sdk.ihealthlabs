"use strict";(self.webpackChunkdoc_sdk=self.webpackChunkdoc_sdk||[]).push([[670],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),d=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},P=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),P=d(n),f=r,p=P["".concat(c,".").concat(f)]||P[f]||u[f]||l;return n?o.createElement(p,i(i({ref:t},s),{},{components:n})):o.createElement(p,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=P;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var d=2;d<l;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}P.displayName="MDXCreateElement"},6275:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return P}});var o=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],a={},c="PO3",d={unversionedId:"device/po3",id:"device/po3",isDocsHomePage:!1,title:"PO3",description:"Import PO3 Module",source:"@site/docs/device/po3.md",sourceDirName:"device",slug:"/device/po3",permalink:"/doc.sdk.ihealthlabs/docs/device/po3",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/device/po3.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PO1",permalink:"/doc.sdk.ihealthlabs/docs/device/po1"},next:{title:"PT3SBT",permalink:"/doc.sdk.ihealthlabs/docs/device/pt3sbt"}},s=[{value:"Import PO3 Module",id:"import-po3-module",children:[]},{value:"APIs",id:"apis",children:[{value:"Add and remove listener",id:"add-and-remove-listener",children:[]},{value:"get battery",id:"get-battery",children:[]},{value:"start a measurement with app",id:"start-a-measurement-with-app",children:[]},{value:"get data stored in the po3 device",id:"get-data-stored-in-the-po3-device",children:[]}]}],u={toc:s};function P(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"po3"},"PO3"),(0,l.kt)("h2",{id:"import-po3-module"},"Import PO3 Module"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  PO3Module,\n  POProfileModule\n} from '@ihealth/ihealthlibrary-react-native';\n")),(0,l.kt)("h2",{id:"apis"},"APIs"),(0,l.kt)("h3",{id:"add-and-remove-listener"},"Add and remove listener"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// add\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    console.log(event);\n});\n\n// remove\nnotifyListener.remove();\n")),(0,l.kt)("h3",{id:"get-battery"},"get battery"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.getBattery(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_BATTERY_PO) {\n        console.log(event[POProfileModule.BATTERY_PO]);\n    }\n});\n")),(0,l.kt)("h3",{id:"start-a-measurement-with-app"},"start a measurement with app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"PO3Module.startMeasure(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_LIVEDA_PO) {\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    } else if(){\n        // final result\n        console.log(event[POProfileModule.PULSE_WAVE_PO]);\n        console.log(event[POProfileModule]);\n        console.log(event[POProfileModule.PI_PO]);\n        console.log(event[POProfileModule.PULSE_STRENGTH_PO]);\n        console.log(event[POProfileModule.BLOOD_OXYGEN_PO]);\n        console.log(event[POProfileModule.PULSE_RATE_PO]);\n    }\n});\n")),(0,l.kt)("h3",{id:"get-data-stored-in-the-po3-device"},"get data stored in the po3 device"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'PO3Module.getHistoryData(mac);\n\n// response\nnotifyListener = DeviceEventEmitter.addListener(PO3Module.Event_Notify,  (event) => {\n    if (event.action === POProfileModule.ACTION_NO_OFFLINEDATA_PO) {\n        console.log("There is no more data stored in the po3 device.");\n    } else if (event.action === POProfileModule.ACTION_OFFLINEDATA_PO) {\n        const dataArray = event[POProfileModule.OFFLINEDATA_PO];\n        for (let i = 0; i < dataArray.length; i++) {\n                let offlineData = dataArray[i];\n                console.log(offlineData[POProfileModule.MEASUREMENT_DATE_BP]);\n                console.log(offlineData[POProfileModule.HIGH_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.LOW_BLOOD_PRESSURE_BP]);\n                console.log(offlineData[POProfileModule.PULSE_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_AHR_BP]);\n                console.log(offlineData[POProfileModule.MEASUREMENT_HSD_BP]);\n                console.log(offlineData[POProfileModule.DATAID]);\n            }\n    }\n});\n')))}P.isMDXComponent=!0}}]);